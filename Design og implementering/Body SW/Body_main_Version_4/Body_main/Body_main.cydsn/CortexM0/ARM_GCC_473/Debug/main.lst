ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccRbVAsW.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	ready_to_send_flag
  18              		.bss
  19              		.align	2
  20              		.type	ready_to_send_flag, %object
  21              		.size	ready_to_send_flag, 4
  22              	ready_to_send_flag:
  23 0000 00000000 		.space	4
  24              		.section	.text.main,"ax",%progbits
  25              		.align	2
  26              		.global	main
  27              		.code	16
  28              		.thumb_func
  29              		.type	main, %function
  30              	main:
  31              	.LFB33:
  32              		.file 1 ".\\main.c"
   1:.\main.c      **** /* ========================================
   2:.\main.c      ****  *
   3:.\main.c      ****  * Copyright YOUR COMPANY, THE YEAR
   4:.\main.c      ****  * All Rights Reserved
   5:.\main.c      ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:.\main.c      ****  *
   7:.\main.c      ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:.\main.c      ****  * WHICH IS THE PROPERTY OF your company.
   9:.\main.c      ****  *
  10:.\main.c      ****  * ========================================
  11:.\main.c      **** */
  12:.\main.c      **** #include <project.h>
  13:.\main.c      **** #include "stdlib.h"
  14:.\main.c      **** #include <stdio.h>
  15:.\main.c      **** 
  16:.\main.c      **** #include "BTUART.h"
  17:.\main.c      **** #include "Sensor.h"
  18:.\main.c      **** 
  19:.\main.c      **** 
  20:.\main.c      **** //Accelerometer ADXL345 defines
  21:.\main.c      **** #define ACCEL_ADDRESS 0x53 // jumperen sættes til GND 
  22:.\main.c      **** #define PWR_CTRL_REG 0x2D //Power control registeret Datablad side 26
  23:.\main.c      **** #define PWR_MODE (1<<3) // Sættes i measurement mode, standby til den skal måle (Strømbesparende
  24:.\main.c      **** #define DATAX0 0x32 //least significant 
  25:.\main.c      **** #define DATAX1 0x33 //most significant
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccRbVAsW.s 			page 2


  26:.\main.c      **** #define DATAY0 0x34
  27:.\main.c      **** #define DATAY1 0x35
  28:.\main.c      **** #define DATAZ0 0x36
  29:.\main.c      **** #define DATAZ1 0x37
  30:.\main.c      **** 
  31:.\main.c      **** //Gyroscope MPU6050 defines 
  32:.\main.c      **** #define GYRO_ADDRESS 0x68 //Jumperen sættes til GND 
  33:.\main.c      **** #define GYRO_XOUT_H 0x43 // Most significant
  34:.\main.c      **** #define GYRO_XOUT_L 0x44 // Least significant 
  35:.\main.c      **** #define GYRO_YOUT_H 0x45
  36:.\main.c      **** #define GYRO_YOUT_L 0x46
  37:.\main.c      **** #define GYRO_ZOUT_H 0x47
  38:.\main.c      **** #define GYRO_ZOUT_L 0x48
  39:.\main.c      **** 
  40:.\main.c      **** 
  41:.\main.c      **** 
  42:.\main.c      **** 
  43:.\main.c      **** 
  44:.\main.c      **** 
  45:.\main.c      **** //Prototyper
  46:.\main.c      **** void initSensors(void);
  47:.\main.c      **** void initADXL345();
  48:.\main.c      **** void initMPU6050();
  49:.\main.c      **** 
  50:.\main.c      **** //ISR prototype
  51:.\main.c      **** CY_ISR_PROTO(ISR_BT_Handler);
  52:.\main.c      **** 
  53:.\main.c      **** //Flags
  54:.\main.c      **** int ready_to_send_flag = 0;
  55:.\main.c      **** 
  56:.\main.c      **** 
  57:.\main.c      **** 
  58:.\main.c      **** int main()
  59:.\main.c      **** {
  33              		.loc 1 59 0
  34              		.cfi_startproc
  35 0000 80B5     		push	{r7, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 7, -8
  39              		.cfi_offset 14, -4
  40 0002 00AF     		add	r7, sp, #0
  41              	.LCFI1:
  42              		.cfi_def_cfa_register 7
  60:.\main.c      ****     
  61:.\main.c      ****     initSensors();
  43              		.loc 1 61 0
  44 0004 FFF7FEFF 		bl	initSensors
  62:.\main.c      ****     initUART();
  45              		.loc 1 62 0
  46 0008 FFF7FEFF 		bl	initUART
  63:.\main.c      **** 	setupI2C(); 
  47              		.loc 1 63 0
  48 000c FFF7FEFF 		bl	setupI2C
  49              	.L2:
  64:.\main.c      **** 	
  65:.\main.c      ****     //ISR enable
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccRbVAsW.s 			page 3


  66:.\main.c      **** 	//isr_sendBT_StartEx(ISR_BT_Handler);
  67:.\main.c      ****     //CyGlobalIntEnable;
  68:.\main.c      ****      //Timer_1_Start();
  69:.\main.c      ****     
  70:.\main.c      **** 	while(1)
  71:.\main.c      ****     {
  72:.\main.c      **** 	    readAllSensors();
  50              		.loc 1 72 0 discriminator 1
  51 0010 FFF7FEFF 		bl	readAllSensors
  73:.\main.c      ****         //Tjekker at data bliver samlet korrekt. 
  74:.\main.c      ****         convSensData();
  52              		.loc 1 74 0 discriminator 1
  53 0014 FFF7FEFF 		bl	convSensData
  75:.\main.c      ****         
  76:.\main.c      ****        
  77:.\main.c      ****         sendDataArray(); 
  54              		.loc 1 77 0 discriminator 1
  55 0018 FFF7FEFF 		bl	sendDataArray
  78:.\main.c      ****         CyDelay(7);
  56              		.loc 1 78 0 discriminator 1
  57 001c 0720     		mov	r0, #7
  58 001e FFF7FEFF 		bl	CyDelay
  79:.\main.c      ****        
  80:.\main.c      ****         
  81:.\main.c      ****     }     
  59              		.loc 1 81 0 discriminator 1
  60 0022 F5E7     		b	.L2
  61              		.cfi_endproc
  62              	.LFE33:
  63              		.size	main, .-main
  64              		.section	.text.ISR_BT_Handler,"ax",%progbits
  65              		.align	2
  66              		.global	ISR_BT_Handler
  67              		.code	16
  68              		.thumb_func
  69              		.type	ISR_BT_Handler, %function
  70              	ISR_BT_Handler:
  71              	.LFB34:
  82:.\main.c      ****             
  83:.\main.c      **** 		
  84:.\main.c      **** 	return 0;
  85:.\main.c      **** }
  86:.\main.c      **** 
  87:.\main.c      **** CY_ISR(ISR_BT_Handler)
  88:.\main.c      **** {
  72              		.loc 1 88 0
  73              		.cfi_startproc
  74 0000 80B5     		push	{r7, lr}
  75              	.LCFI2:
  76              		.cfi_def_cfa_offset 8
  77              		.cfi_offset 7, -8
  78              		.cfi_offset 14, -4
  79 0002 00AF     		add	r7, sp, #0
  80              	.LCFI3:
  81              		.cfi_def_cfa_register 7
  89:.\main.c      ****         //SEND DATA VIA BT
  90:.\main.c      ****         sendDataArray(); 
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccRbVAsW.s 			page 4


  82              		.loc 1 90 0
  83 0004 FFF7FEFF 		bl	sendDataArray
  91:.\main.c      ****         ready_to_send_flag = 0;
  84              		.loc 1 91 0
  85 0008 024B     		ldr	r3, .L4
  86 000a 0022     		mov	r2, #0
  87 000c 1A60     		str	r2, [r3]
  92:.\main.c      **** }
  88              		.loc 1 92 0
  89 000e BD46     		mov	sp, r7
  90              		@ sp needed for prologue
  91 0010 80BD     		pop	{r7, pc}
  92              	.L5:
  93 0012 C046     		.align	2
  94              	.L4:
  95 0014 00000000 		.word	ready_to_send_flag
  96              		.cfi_endproc
  97              	.LFE34:
  98              		.size	ISR_BT_Handler, .-ISR_BT_Handler
  99              		.section	.text.initSensors,"ax",%progbits
 100              		.align	2
 101              		.global	initSensors
 102              		.code	16
 103              		.thumb_func
 104              		.type	initSensors, %function
 105              	initSensors:
 106              	.LFB35:
  93:.\main.c      **** 
  94:.\main.c      **** 
  95:.\main.c      **** 
  96:.\main.c      **** void initSensors()
  97:.\main.c      **** {	
 107              		.loc 1 97 0
 108              		.cfi_startproc
 109 0000 80B5     		push	{r7, lr}
 110              	.LCFI4:
 111              		.cfi_def_cfa_offset 8
 112              		.cfi_offset 7, -8
 113              		.cfi_offset 14, -4
 114 0002 00AF     		add	r7, sp, #0
 115              	.LCFI5:
 116              		.cfi_def_cfa_register 7
  98:.\main.c      **** 	/***** INIT INDIVIDUAL SENSORS *****/
  99:.\main.c      **** 	//initMPU6050();	//Gyroscope
 100:.\main.c      **** 	initADXL345();	//Accellerometer
 117              		.loc 1 100 0
 118 0004 FFF7FEFF 		bl	initADXL345
 101:.\main.c      **** 	// ..osv
 102:.\main.c      **** }
 119              		.loc 1 102 0
 120 0008 BD46     		mov	sp, r7
 121              		@ sp needed for prologue
 122 000a 80BD     		pop	{r7, pc}
 123              		.cfi_endproc
 124              	.LFE35:
 125              		.size	initSensors, .-initSensors
 126              		.section	.text.initADXL345,"ax",%progbits
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccRbVAsW.s 			page 5


 127              		.align	2
 128              		.global	initADXL345
 129              		.code	16
 130              		.thumb_func
 131              		.type	initADXL345, %function
 132              	initADXL345:
 133              	.LFB36:
 103:.\main.c      **** 
 104:.\main.c      **** 
 105:.\main.c      **** 
 106:.\main.c      **** //init accelerometer
 107:.\main.c      **** void initADXL345()
 108:.\main.c      **** {
 134              		.loc 1 108 0
 135              		.cfi_startproc
 136 0000 80B5     		push	{r7, lr}
 137              	.LCFI6:
 138              		.cfi_def_cfa_offset 8
 139              		.cfi_offset 7, -8
 140              		.cfi_offset 14, -4
 141 0002 00AF     		add	r7, sp, #0
 142              	.LCFI7:
 143              		.cfi_def_cfa_register 7
 109:.\main.c      **** 	// Fylder ADXL345 ind i sensor array'et. 
 110:.\main.c      **** 	setSensArray(ACCEL_ADDRESS, DATAX0, DEFAULT_DATA);
 144              		.loc 1 110 0
 145 0004 0123     		mov	r3, #1
 146 0006 5B42     		neg	r3, r3
 147 0008 5320     		mov	r0, #83
 148 000a 3221     		mov	r1, #50
 149 000c 1A1C     		mov	r2, r3
 150 000e FFF7FEFF 		bl	setSensArray
 111:.\main.c      **** 	setSensArray(ACCEL_ADDRESS, DATAX1, DEFAULT_DATA);
 151              		.loc 1 111 0
 152 0012 0123     		mov	r3, #1
 153 0014 5B42     		neg	r3, r3
 154 0016 5320     		mov	r0, #83
 155 0018 3321     		mov	r1, #51
 156 001a 1A1C     		mov	r2, r3
 157 001c FFF7FEFF 		bl	setSensArray
 112:.\main.c      **** 	setSensArray(ACCEL_ADDRESS, DATAY0, DEFAULT_DATA);
 158              		.loc 1 112 0
 159 0020 0123     		mov	r3, #1
 160 0022 5B42     		neg	r3, r3
 161 0024 5320     		mov	r0, #83
 162 0026 3421     		mov	r1, #52
 163 0028 1A1C     		mov	r2, r3
 164 002a FFF7FEFF 		bl	setSensArray
 113:.\main.c      **** 	setSensArray(ACCEL_ADDRESS, DATAY1, DEFAULT_DATA);
 165              		.loc 1 113 0
 166 002e 0123     		mov	r3, #1
 167 0030 5B42     		neg	r3, r3
 168 0032 5320     		mov	r0, #83
 169 0034 3521     		mov	r1, #53
 170 0036 1A1C     		mov	r2, r3
 171 0038 FFF7FEFF 		bl	setSensArray
 114:.\main.c      **** 	setSensArray(ACCEL_ADDRESS, DATAZ0, DEFAULT_DATA);
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccRbVAsW.s 			page 6


 172              		.loc 1 114 0
 173 003c 0123     		mov	r3, #1
 174 003e 5B42     		neg	r3, r3
 175 0040 5320     		mov	r0, #83
 176 0042 3621     		mov	r1, #54
 177 0044 1A1C     		mov	r2, r3
 178 0046 FFF7FEFF 		bl	setSensArray
 115:.\main.c      **** 	setSensArray(ACCEL_ADDRESS, DATAZ1, DEFAULT_DATA);
 179              		.loc 1 115 0
 180 004a 0123     		mov	r3, #1
 181 004c 5B42     		neg	r3, r3
 182 004e 5320     		mov	r0, #83
 183 0050 3721     		mov	r1, #55
 184 0052 1A1C     		mov	r2, r3
 185 0054 FFF7FEFF 		bl	setSensArray
 116:.\main.c      **** 	
 117:.\main.c      **** 	//Opsætter til I2C 
 118:.\main.c      **** 	if(I2C_1_I2CMasterSendStart(ACCEL_ADDRESS, I2C_1_I2C_WRITE_XFER_MODE) == I2C_1_I2C_MSTR_NO_ERROR /
 186              		.loc 1 118 0
 187 0058 5320     		mov	r0, #83
 188 005a 0021     		mov	r1, #0
 189 005c FFF7FEFF 		bl	I2C_1_I2CMasterSendStart
 190 0060 031C     		mov	r3, r0
 191 0062 002B     		cmp	r3, #0
 192 0064 0DD1     		bne	.L7
 119:.\main.c      ****         && I2C_1_I2CMasterWriteByte(PWR_CTRL_REG) == I2C_1_I2C_MSTR_NO_ERROR // POWER CONTROL REGIS
 193              		.loc 1 119 0
 194 0066 2D20     		mov	r0, #45
 195 0068 FFF7FEFF 		bl	I2C_1_I2CMasterWriteByte
 196 006c 031C     		mov	r3, r0
 197 006e 002B     		cmp	r3, #0
 198 0070 07D1     		bne	.L7
 120:.\main.c      ****         && I2C_1_I2CMasterWriteByte(PWR_MODE) == I2C_1_I2C_MSTR_NO_ERROR) // Sættes i measurement 
 199              		.loc 1 120 0
 200 0072 0820     		mov	r0, #8
 201 0074 FFF7FEFF 		bl	I2C_1_I2CMasterWriteByte
 202 0078 031C     		mov	r3, r0
 203 007a 002B     		cmp	r3, #0
 204 007c 01D1     		bne	.L7
 121:.\main.c      **** 	handleI2CError();
 205              		.loc 1 121 0
 206 007e FFF7FEFF 		bl	handleI2CError
 207              	.L7:
 122:.\main.c      **** }
 208              		.loc 1 122 0
 209 0082 BD46     		mov	sp, r7
 210              		@ sp needed for prologue
 211 0084 80BD     		pop	{r7, pc}
 212              		.cfi_endproc
 213              	.LFE36:
 214              		.size	initADXL345, .-initADXL345
 215 0086 C046     		.section	.text.initMPU6050,"ax",%progbits
 216              		.align	2
 217              		.global	initMPU6050
 218              		.code	16
 219              		.thumb_func
 220              		.type	initMPU6050, %function
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccRbVAsW.s 			page 7


 221              	initMPU6050:
 222              	.LFB37:
 123:.\main.c      **** 
 124:.\main.c      **** //init gyroscope 
 125:.\main.c      **** void initMPU6050()
 126:.\main.c      **** {
 223              		.loc 1 126 0
 224              		.cfi_startproc
 225 0000 80B5     		push	{r7, lr}
 226              	.LCFI8:
 227              		.cfi_def_cfa_offset 8
 228              		.cfi_offset 7, -8
 229              		.cfi_offset 14, -4
 230 0002 00AF     		add	r7, sp, #0
 231              	.LCFI9:
 232              		.cfi_def_cfa_register 7
 127:.\main.c      **** 	// Fylder ADXL345 ind i sensor array'et. 
 128:.\main.c      **** 	setSensArray(GYRO_ADDRESS, GYRO_XOUT_H, DEFAULT_DATA);
 233              		.loc 1 128 0
 234 0004 0123     		mov	r3, #1
 235 0006 5B42     		neg	r3, r3
 236 0008 6820     		mov	r0, #104
 237 000a 4321     		mov	r1, #67
 238 000c 1A1C     		mov	r2, r3
 239 000e FFF7FEFF 		bl	setSensArray
 129:.\main.c      ****     setSensArray(GYRO_ADDRESS, GYRO_XOUT_L, DEFAULT_DATA);
 240              		.loc 1 129 0
 241 0012 0123     		mov	r3, #1
 242 0014 5B42     		neg	r3, r3
 243 0016 6820     		mov	r0, #104
 244 0018 4421     		mov	r1, #68
 245 001a 1A1C     		mov	r2, r3
 246 001c FFF7FEFF 		bl	setSensArray
 130:.\main.c      **** 	setSensArray(GYRO_ADDRESS, GYRO_YOUT_H, DEFAULT_DATA);
 247              		.loc 1 130 0
 248 0020 0123     		mov	r3, #1
 249 0022 5B42     		neg	r3, r3
 250 0024 6820     		mov	r0, #104
 251 0026 4521     		mov	r1, #69
 252 0028 1A1C     		mov	r2, r3
 253 002a FFF7FEFF 		bl	setSensArray
 131:.\main.c      **** 	setSensArray(GYRO_ADDRESS, GYRO_YOUT_L, DEFAULT_DATA);
 254              		.loc 1 131 0
 255 002e 0123     		mov	r3, #1
 256 0030 5B42     		neg	r3, r3
 257 0032 6820     		mov	r0, #104
 258 0034 4621     		mov	r1, #70
 259 0036 1A1C     		mov	r2, r3
 260 0038 FFF7FEFF 		bl	setSensArray
 132:.\main.c      **** 	setSensArray(GYRO_ADDRESS, GYRO_ZOUT_H, DEFAULT_DATA);
 261              		.loc 1 132 0
 262 003c 0123     		mov	r3, #1
 263 003e 5B42     		neg	r3, r3
 264 0040 6820     		mov	r0, #104
 265 0042 4721     		mov	r1, #71
 266 0044 1A1C     		mov	r2, r3
 267 0046 FFF7FEFF 		bl	setSensArray
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccRbVAsW.s 			page 8


 133:.\main.c      **** 	setSensArray(GYRO_ADDRESS, GYRO_ZOUT_L, DEFAULT_DATA);
 268              		.loc 1 133 0
 269 004a 0123     		mov	r3, #1
 270 004c 5B42     		neg	r3, r3
 271 004e 6820     		mov	r0, #104
 272 0050 4821     		mov	r1, #72
 273 0052 1A1C     		mov	r2, r3
 274 0054 FFF7FEFF 		bl	setSensArray
 134:.\main.c      **** 	
 135:.\main.c      **** 	//Opsætter til I2C 
 136:.\main.c      **** 	if(I2C_1_I2CMasterSendStart(GYRO_ADDRESS, I2C_1_I2C_WRITE_XFER_MODE) == I2C_1_I2C_MSTR_NO_ERROR) /
 275              		.loc 1 136 0
 276 0058 6820     		mov	r0, #104
 277 005a 0021     		mov	r1, #0
 278 005c FFF7FEFF 		bl	I2C_1_I2CMasterSendStart
 279 0060 031C     		mov	r3, r0
 280 0062 002B     		cmp	r3, #0
 281 0064 01D1     		bne	.L9
 137:.\main.c      **** 	handleI2CError();
 282              		.loc 1 137 0
 283 0066 FFF7FEFF 		bl	handleI2CError
 284              	.L9:
 138:.\main.c      **** }
 285              		.loc 1 138 0
 286 006a BD46     		mov	sp, r7
 287              		@ sp needed for prologue
 288 006c 80BD     		pop	{r7, pc}
 289              		.cfi_endproc
 290              	.LFE37:
 291              		.size	initMPU6050, .-initMPU6050
 292 006e C046     		.text
 293              	.Letext0:
 294              		.section	.debug_info,"",%progbits
 295              	.Ldebug_info0:
 296 0000 09010000 		.4byte	0x109
 297 0004 0200     		.2byte	0x2
 298 0006 00000000 		.4byte	.Ldebug_abbrev0
 299 000a 04       		.byte	0x4
 300 000b 01       		.uleb128 0x1
 301 000c 33000000 		.4byte	.LASF18
 302 0010 01       		.byte	0x1
 303 0011 4F010000 		.4byte	.LASF19
 304 0015 18010000 		.4byte	.LASF20
 305 0019 00000000 		.4byte	.Ldebug_ranges0+0
 306 001d 00000000 		.4byte	0
 307 0021 00000000 		.4byte	0
 308 0025 00000000 		.4byte	.Ldebug_line0
 309 0029 02       		.uleb128 0x2
 310 002a 01       		.byte	0x1
 311 002b 06       		.byte	0x6
 312 002c 0C010000 		.4byte	.LASF0
 313 0030 02       		.uleb128 0x2
 314 0031 01       		.byte	0x1
 315 0032 08       		.byte	0x8
 316 0033 B1000000 		.4byte	.LASF1
 317 0037 02       		.uleb128 0x2
 318 0038 02       		.byte	0x2
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccRbVAsW.s 			page 9


 319 0039 05       		.byte	0x5
 320 003a E8000000 		.4byte	.LASF2
 321 003e 02       		.uleb128 0x2
 322 003f 02       		.byte	0x2
 323 0040 07       		.byte	0x7
 324 0041 F9000000 		.4byte	.LASF3
 325 0045 02       		.uleb128 0x2
 326 0046 04       		.byte	0x4
 327 0047 05       		.byte	0x5
 328 0048 DF000000 		.4byte	.LASF4
 329 004c 02       		.uleb128 0x2
 330 004d 04       		.byte	0x4
 331 004e 07       		.byte	0x7
 332 004f 7C000000 		.4byte	.LASF5
 333 0053 02       		.uleb128 0x2
 334 0054 08       		.byte	0x8
 335 0055 05       		.byte	0x5
 336 0056 00000000 		.4byte	.LASF6
 337 005a 02       		.uleb128 0x2
 338 005b 08       		.byte	0x8
 339 005c 07       		.byte	0x7
 340 005d 8E000000 		.4byte	.LASF7
 341 0061 03       		.uleb128 0x3
 342 0062 04       		.byte	0x4
 343 0063 05       		.byte	0x5
 344 0064 696E7400 		.ascii	"int\000"
 345 0068 02       		.uleb128 0x2
 346 0069 04       		.byte	0x4
 347 006a 07       		.byte	0x7
 348 006b 0E000000 		.4byte	.LASF8
 349 006f 02       		.uleb128 0x2
 350 0070 04       		.byte	0x4
 351 0071 04       		.byte	0x4
 352 0072 49010000 		.4byte	.LASF9
 353 0076 02       		.uleb128 0x2
 354 0077 08       		.byte	0x8
 355 0078 04       		.byte	0x4
 356 0079 F2000000 		.4byte	.LASF10
 357 007d 02       		.uleb128 0x2
 358 007e 01       		.byte	0x1
 359 007f 08       		.byte	0x8
 360 0080 CB000000 		.4byte	.LASF11
 361 0084 02       		.uleb128 0x2
 362 0085 04       		.byte	0x4
 363 0086 07       		.byte	0x7
 364 0087 64010000 		.4byte	.LASF12
 365 008b 04       		.uleb128 0x4
 366 008c 01       		.byte	0x1
 367 008d 1B000000 		.4byte	.LASF13
 368 0091 01       		.byte	0x1
 369 0092 3A       		.byte	0x3a
 370 0093 61000000 		.4byte	0x61
 371 0097 00000000 		.4byte	.LFB33
 372 009b 24000000 		.4byte	.LFE33
 373 009f 00000000 		.4byte	.LLST0
 374 00a3 01       		.byte	0x1
 375 00a4 05       		.uleb128 0x5
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccRbVAsW.s 			page 10


 376 00a5 01       		.byte	0x1
 377 00a6 D0000000 		.4byte	.LASF14
 378 00aa 01       		.byte	0x1
 379 00ab 57       		.byte	0x57
 380 00ac 01       		.byte	0x1
 381 00ad 00000000 		.4byte	.LFB34
 382 00b1 18000000 		.4byte	.LFE34
 383 00b5 2C000000 		.4byte	.LLST1
 384 00b9 01       		.byte	0x1
 385 00ba 05       		.uleb128 0x5
 386 00bb 01       		.byte	0x1
 387 00bc A5000000 		.4byte	.LASF15
 388 00c0 01       		.byte	0x1
 389 00c1 60       		.byte	0x60
 390 00c2 01       		.byte	0x1
 391 00c3 00000000 		.4byte	.LFB35
 392 00c7 0C000000 		.4byte	.LFE35
 393 00cb 58000000 		.4byte	.LLST2
 394 00cf 01       		.byte	0x1
 395 00d0 06       		.uleb128 0x6
 396 00d1 01       		.byte	0x1
 397 00d2 58010000 		.4byte	.LASF16
 398 00d6 01       		.byte	0x1
 399 00d7 6B       		.byte	0x6b
 400 00d8 00000000 		.4byte	.LFB36
 401 00dc 86000000 		.4byte	.LFE36
 402 00e0 84000000 		.4byte	.LLST3
 403 00e4 01       		.byte	0x1
 404 00e5 06       		.uleb128 0x6
 405 00e6 01       		.byte	0x1
 406 00e7 BF000000 		.4byte	.LASF17
 407 00eb 01       		.byte	0x1
 408 00ec 7D       		.byte	0x7d
 409 00ed 00000000 		.4byte	.LFB37
 410 00f1 6E000000 		.4byte	.LFE37
 411 00f5 B0000000 		.4byte	.LLST4
 412 00f9 01       		.byte	0x1
 413 00fa 07       		.uleb128 0x7
 414 00fb 20000000 		.4byte	.LASF21
 415 00ff 01       		.byte	0x1
 416 0100 36       		.byte	0x36
 417 0101 61000000 		.4byte	0x61
 418 0105 01       		.byte	0x1
 419 0106 05       		.byte	0x5
 420 0107 03       		.byte	0x3
 421 0108 00000000 		.4byte	ready_to_send_flag
 422 010c 00       		.byte	0
 423              		.section	.debug_abbrev,"",%progbits
 424              	.Ldebug_abbrev0:
 425 0000 01       		.uleb128 0x1
 426 0001 11       		.uleb128 0x11
 427 0002 01       		.byte	0x1
 428 0003 25       		.uleb128 0x25
 429 0004 0E       		.uleb128 0xe
 430 0005 13       		.uleb128 0x13
 431 0006 0B       		.uleb128 0xb
 432 0007 03       		.uleb128 0x3
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccRbVAsW.s 			page 11


 433 0008 0E       		.uleb128 0xe
 434 0009 1B       		.uleb128 0x1b
 435 000a 0E       		.uleb128 0xe
 436 000b 55       		.uleb128 0x55
 437 000c 06       		.uleb128 0x6
 438 000d 11       		.uleb128 0x11
 439 000e 01       		.uleb128 0x1
 440 000f 52       		.uleb128 0x52
 441 0010 01       		.uleb128 0x1
 442 0011 10       		.uleb128 0x10
 443 0012 06       		.uleb128 0x6
 444 0013 00       		.byte	0
 445 0014 00       		.byte	0
 446 0015 02       		.uleb128 0x2
 447 0016 24       		.uleb128 0x24
 448 0017 00       		.byte	0
 449 0018 0B       		.uleb128 0xb
 450 0019 0B       		.uleb128 0xb
 451 001a 3E       		.uleb128 0x3e
 452 001b 0B       		.uleb128 0xb
 453 001c 03       		.uleb128 0x3
 454 001d 0E       		.uleb128 0xe
 455 001e 00       		.byte	0
 456 001f 00       		.byte	0
 457 0020 03       		.uleb128 0x3
 458 0021 24       		.uleb128 0x24
 459 0022 00       		.byte	0
 460 0023 0B       		.uleb128 0xb
 461 0024 0B       		.uleb128 0xb
 462 0025 3E       		.uleb128 0x3e
 463 0026 0B       		.uleb128 0xb
 464 0027 03       		.uleb128 0x3
 465 0028 08       		.uleb128 0x8
 466 0029 00       		.byte	0
 467 002a 00       		.byte	0
 468 002b 04       		.uleb128 0x4
 469 002c 2E       		.uleb128 0x2e
 470 002d 00       		.byte	0
 471 002e 3F       		.uleb128 0x3f
 472 002f 0C       		.uleb128 0xc
 473 0030 03       		.uleb128 0x3
 474 0031 0E       		.uleb128 0xe
 475 0032 3A       		.uleb128 0x3a
 476 0033 0B       		.uleb128 0xb
 477 0034 3B       		.uleb128 0x3b
 478 0035 0B       		.uleb128 0xb
 479 0036 49       		.uleb128 0x49
 480 0037 13       		.uleb128 0x13
 481 0038 11       		.uleb128 0x11
 482 0039 01       		.uleb128 0x1
 483 003a 12       		.uleb128 0x12
 484 003b 01       		.uleb128 0x1
 485 003c 40       		.uleb128 0x40
 486 003d 06       		.uleb128 0x6
 487 003e 9642     		.uleb128 0x2116
 488 0040 0C       		.uleb128 0xc
 489 0041 00       		.byte	0
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccRbVAsW.s 			page 12


 490 0042 00       		.byte	0
 491 0043 05       		.uleb128 0x5
 492 0044 2E       		.uleb128 0x2e
 493 0045 00       		.byte	0
 494 0046 3F       		.uleb128 0x3f
 495 0047 0C       		.uleb128 0xc
 496 0048 03       		.uleb128 0x3
 497 0049 0E       		.uleb128 0xe
 498 004a 3A       		.uleb128 0x3a
 499 004b 0B       		.uleb128 0xb
 500 004c 3B       		.uleb128 0x3b
 501 004d 0B       		.uleb128 0xb
 502 004e 27       		.uleb128 0x27
 503 004f 0C       		.uleb128 0xc
 504 0050 11       		.uleb128 0x11
 505 0051 01       		.uleb128 0x1
 506 0052 12       		.uleb128 0x12
 507 0053 01       		.uleb128 0x1
 508 0054 40       		.uleb128 0x40
 509 0055 06       		.uleb128 0x6
 510 0056 9642     		.uleb128 0x2116
 511 0058 0C       		.uleb128 0xc
 512 0059 00       		.byte	0
 513 005a 00       		.byte	0
 514 005b 06       		.uleb128 0x6
 515 005c 2E       		.uleb128 0x2e
 516 005d 00       		.byte	0
 517 005e 3F       		.uleb128 0x3f
 518 005f 0C       		.uleb128 0xc
 519 0060 03       		.uleb128 0x3
 520 0061 0E       		.uleb128 0xe
 521 0062 3A       		.uleb128 0x3a
 522 0063 0B       		.uleb128 0xb
 523 0064 3B       		.uleb128 0x3b
 524 0065 0B       		.uleb128 0xb
 525 0066 11       		.uleb128 0x11
 526 0067 01       		.uleb128 0x1
 527 0068 12       		.uleb128 0x12
 528 0069 01       		.uleb128 0x1
 529 006a 40       		.uleb128 0x40
 530 006b 06       		.uleb128 0x6
 531 006c 9642     		.uleb128 0x2116
 532 006e 0C       		.uleb128 0xc
 533 006f 00       		.byte	0
 534 0070 00       		.byte	0
 535 0071 07       		.uleb128 0x7
 536 0072 34       		.uleb128 0x34
 537 0073 00       		.byte	0
 538 0074 03       		.uleb128 0x3
 539 0075 0E       		.uleb128 0xe
 540 0076 3A       		.uleb128 0x3a
 541 0077 0B       		.uleb128 0xb
 542 0078 3B       		.uleb128 0x3b
 543 0079 0B       		.uleb128 0xb
 544 007a 49       		.uleb128 0x49
 545 007b 13       		.uleb128 0x13
 546 007c 3F       		.uleb128 0x3f
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccRbVAsW.s 			page 13


 547 007d 0C       		.uleb128 0xc
 548 007e 02       		.uleb128 0x2
 549 007f 0A       		.uleb128 0xa
 550 0080 00       		.byte	0
 551 0081 00       		.byte	0
 552 0082 00       		.byte	0
 553              		.section	.debug_loc,"",%progbits
 554              	.Ldebug_loc0:
 555              	.LLST0:
 556 0000 00000000 		.4byte	.LFB33
 557 0004 02000000 		.4byte	.LCFI0
 558 0008 0200     		.2byte	0x2
 559 000a 7D       		.byte	0x7d
 560 000b 00       		.sleb128 0
 561 000c 02000000 		.4byte	.LCFI0
 562 0010 04000000 		.4byte	.LCFI1
 563 0014 0200     		.2byte	0x2
 564 0016 7D       		.byte	0x7d
 565 0017 08       		.sleb128 8
 566 0018 04000000 		.4byte	.LCFI1
 567 001c 24000000 		.4byte	.LFE33
 568 0020 0200     		.2byte	0x2
 569 0022 77       		.byte	0x77
 570 0023 08       		.sleb128 8
 571 0024 00000000 		.4byte	0
 572 0028 00000000 		.4byte	0
 573              	.LLST1:
 574 002c 00000000 		.4byte	.LFB34
 575 0030 02000000 		.4byte	.LCFI2
 576 0034 0200     		.2byte	0x2
 577 0036 7D       		.byte	0x7d
 578 0037 00       		.sleb128 0
 579 0038 02000000 		.4byte	.LCFI2
 580 003c 04000000 		.4byte	.LCFI3
 581 0040 0200     		.2byte	0x2
 582 0042 7D       		.byte	0x7d
 583 0043 08       		.sleb128 8
 584 0044 04000000 		.4byte	.LCFI3
 585 0048 18000000 		.4byte	.LFE34
 586 004c 0200     		.2byte	0x2
 587 004e 77       		.byte	0x77
 588 004f 08       		.sleb128 8
 589 0050 00000000 		.4byte	0
 590 0054 00000000 		.4byte	0
 591              	.LLST2:
 592 0058 00000000 		.4byte	.LFB35
 593 005c 02000000 		.4byte	.LCFI4
 594 0060 0200     		.2byte	0x2
 595 0062 7D       		.byte	0x7d
 596 0063 00       		.sleb128 0
 597 0064 02000000 		.4byte	.LCFI4
 598 0068 04000000 		.4byte	.LCFI5
 599 006c 0200     		.2byte	0x2
 600 006e 7D       		.byte	0x7d
 601 006f 08       		.sleb128 8
 602 0070 04000000 		.4byte	.LCFI5
 603 0074 0C000000 		.4byte	.LFE35
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccRbVAsW.s 			page 14


 604 0078 0200     		.2byte	0x2
 605 007a 77       		.byte	0x77
 606 007b 08       		.sleb128 8
 607 007c 00000000 		.4byte	0
 608 0080 00000000 		.4byte	0
 609              	.LLST3:
 610 0084 00000000 		.4byte	.LFB36
 611 0088 02000000 		.4byte	.LCFI6
 612 008c 0200     		.2byte	0x2
 613 008e 7D       		.byte	0x7d
 614 008f 00       		.sleb128 0
 615 0090 02000000 		.4byte	.LCFI6
 616 0094 04000000 		.4byte	.LCFI7
 617 0098 0200     		.2byte	0x2
 618 009a 7D       		.byte	0x7d
 619 009b 08       		.sleb128 8
 620 009c 04000000 		.4byte	.LCFI7
 621 00a0 86000000 		.4byte	.LFE36
 622 00a4 0200     		.2byte	0x2
 623 00a6 77       		.byte	0x77
 624 00a7 08       		.sleb128 8
 625 00a8 00000000 		.4byte	0
 626 00ac 00000000 		.4byte	0
 627              	.LLST4:
 628 00b0 00000000 		.4byte	.LFB37
 629 00b4 02000000 		.4byte	.LCFI8
 630 00b8 0200     		.2byte	0x2
 631 00ba 7D       		.byte	0x7d
 632 00bb 00       		.sleb128 0
 633 00bc 02000000 		.4byte	.LCFI8
 634 00c0 04000000 		.4byte	.LCFI9
 635 00c4 0200     		.2byte	0x2
 636 00c6 7D       		.byte	0x7d
 637 00c7 08       		.sleb128 8
 638 00c8 04000000 		.4byte	.LCFI9
 639 00cc 6E000000 		.4byte	.LFE37
 640 00d0 0200     		.2byte	0x2
 641 00d2 77       		.byte	0x77
 642 00d3 08       		.sleb128 8
 643 00d4 00000000 		.4byte	0
 644 00d8 00000000 		.4byte	0
 645              		.section	.debug_aranges,"",%progbits
 646 0000 3C000000 		.4byte	0x3c
 647 0004 0200     		.2byte	0x2
 648 0006 00000000 		.4byte	.Ldebug_info0
 649 000a 04       		.byte	0x4
 650 000b 00       		.byte	0
 651 000c 0000     		.2byte	0
 652 000e 0000     		.2byte	0
 653 0010 00000000 		.4byte	.LFB33
 654 0014 24000000 		.4byte	.LFE33-.LFB33
 655 0018 00000000 		.4byte	.LFB34
 656 001c 18000000 		.4byte	.LFE34-.LFB34
 657 0020 00000000 		.4byte	.LFB35
 658 0024 0C000000 		.4byte	.LFE35-.LFB35
 659 0028 00000000 		.4byte	.LFB36
 660 002c 86000000 		.4byte	.LFE36-.LFB36
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccRbVAsW.s 			page 15


 661 0030 00000000 		.4byte	.LFB37
 662 0034 6E000000 		.4byte	.LFE37-.LFB37
 663 0038 00000000 		.4byte	0
 664 003c 00000000 		.4byte	0
 665              		.section	.debug_ranges,"",%progbits
 666              	.Ldebug_ranges0:
 667 0000 00000000 		.4byte	.LFB33
 668 0004 24000000 		.4byte	.LFE33
 669 0008 00000000 		.4byte	.LFB34
 670 000c 18000000 		.4byte	.LFE34
 671 0010 00000000 		.4byte	.LFB35
 672 0014 0C000000 		.4byte	.LFE35
 673 0018 00000000 		.4byte	.LFB36
 674 001c 86000000 		.4byte	.LFE36
 675 0020 00000000 		.4byte	.LFB37
 676 0024 6E000000 		.4byte	.LFE37
 677 0028 00000000 		.4byte	0
 678 002c 00000000 		.4byte	0
 679              		.section	.debug_line,"",%progbits
 680              	.Ldebug_line0:
 681 0000 AB000000 		.section	.debug_str,"MS",%progbits,1
 681      02001F00 
 681      00000201 
 681      FB0E0D00 
 681      01010101 
 682              	.LASF6:
 683 0000 6C6F6E67 		.ascii	"long long int\000"
 683      206C6F6E 
 683      6720696E 
 683      7400
 684              	.LASF8:
 685 000e 756E7369 		.ascii	"unsigned int\000"
 685      676E6564 
 685      20696E74 
 685      00
 686              	.LASF13:
 687 001b 6D61696E 		.ascii	"main\000"
 687      00
 688              	.LASF21:
 689 0020 72656164 		.ascii	"ready_to_send_flag\000"
 689      795F746F 
 689      5F73656E 
 689      645F666C 
 689      616700
 690              	.LASF18:
 691 0033 474E5520 		.ascii	"GNU C 4.7.3 20130312 (release) [ARM/embedded-4_7-br"
 691      4320342E 
 691      372E3320 
 691      32303133 
 691      30333132 
 692 0066 616E6368 		.ascii	"anch revision 196615]\000"
 692      20726576 
 692      6973696F 
 692      6E203139 
 692      36363135 
 693              	.LASF5:
 694 007c 6C6F6E67 		.ascii	"long unsigned int\000"
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccRbVAsW.s 			page 16


 694      20756E73 
 694      69676E65 
 694      6420696E 
 694      7400
 695              	.LASF7:
 696 008e 6C6F6E67 		.ascii	"long long unsigned int\000"
 696      206C6F6E 
 696      6720756E 
 696      7369676E 
 696      65642069 
 697              	.LASF15:
 698 00a5 696E6974 		.ascii	"initSensors\000"
 698      53656E73 
 698      6F727300 
 699              	.LASF1:
 700 00b1 756E7369 		.ascii	"unsigned char\000"
 700      676E6564 
 700      20636861 
 700      7200
 701              	.LASF17:
 702 00bf 696E6974 		.ascii	"initMPU6050\000"
 702      4D505536 
 702      30353000 
 703              	.LASF11:
 704 00cb 63686172 		.ascii	"char\000"
 704      00
 705              	.LASF14:
 706 00d0 4953525F 		.ascii	"ISR_BT_Handler\000"
 706      42545F48 
 706      616E646C 
 706      657200
 707              	.LASF4:
 708 00df 6C6F6E67 		.ascii	"long int\000"
 708      20696E74 
 708      00
 709              	.LASF2:
 710 00e8 73686F72 		.ascii	"short int\000"
 710      7420696E 
 710      7400
 711              	.LASF10:
 712 00f2 646F7562 		.ascii	"double\000"
 712      6C6500
 713              	.LASF3:
 714 00f9 73686F72 		.ascii	"short unsigned int\000"
 714      7420756E 
 714      7369676E 
 714      65642069 
 714      6E7400
 715              	.LASF0:
 716 010c 7369676E 		.ascii	"signed char\000"
 716      65642063 
 716      68617200 
 717              	.LASF20:
 718 0118 433A5C55 		.ascii	"C:\\Users\\Jeppe\\Desktop\\Body_main\\Body_main.cyd"
 718      73657273 
 718      5C4A6570 
 718      70655C44 
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccRbVAsW.s 			page 17


 718      65736B74 
 719 0146 736E00   		.ascii	"sn\000"
 720              	.LASF9:
 721 0149 666C6F61 		.ascii	"float\000"
 721      7400
 722              	.LASF19:
 723 014f 2E5C6D61 		.ascii	".\\main.c\000"
 723      696E2E63 
 723      00
 724              	.LASF16:
 725 0158 696E6974 		.ascii	"initADXL345\000"
 725      4144584C 
 725      33343500 
 726              	.LASF12:
 727 0164 73697A65 		.ascii	"sizetype\000"
 727      74797065 
 727      00
 728              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.7.3 20130312 (release) [ARM/embedded-4_7-br
