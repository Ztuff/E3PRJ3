ARM GAS  C:\Users\Kristian\AppData\Local\Temp\cc62PDWa.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	numOfRegToRead
  18              		.bss
  19              		.type	numOfRegToRead, %object
  20              		.size	numOfRegToRead, 1
  21              	numOfRegToRead:
  22 0000 00       		.space	1
  23              		.comm	sensArray,1152,4
  24              		.comm	dataArray,66,4
  25              		.section	.text.MY_ISR,"ax",%progbits
  26              		.align	2
  27              		.global	MY_ISR
  28              		.code	16
  29              		.thumb_func
  30              		.type	MY_ISR, %function
  31              	MY_ISR:
  32              	.LFB33:
  33              		.file 1 ".\\main.c"
   1:.\main.c      **** /* ========================================
   2:.\main.c      ****  *
   3:.\main.c      ****  * Copyright YOUR COMPANY, THE YEAR
   4:.\main.c      ****  * All Rights Reserved
   5:.\main.c      ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:.\main.c      ****  *
   7:.\main.c      ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:.\main.c      ****  * WHICH IS THE PROPERTY OF your company.
   9:.\main.c      ****  *
  10:.\main.c      ****  * ========================================
  11:.\main.c      **** */
  12:.\main.c      **** #include <project.h>
  13:.\main.c      **** #include "stdlib.h"
  14:.\main.c      **** #include <stdio.h>
  15:.\main.c      **** 
  16:.\main.c      **** //Sensor ID's 0-15
  17:.\main.c      **** #define ACC1_ID 0
  18:.\main.c      **** #define GYR1_ID 1
  19:.\main.c      **** #define FLE1_ID 2
  20:.\main.c      **** #define	PRX1_ID 3
  21:.\main.c      **** #define ACC2_ID 4
  22:.\main.c      **** #define GYR2_ID 5
  23:.\main.c      **** #define FLE2_ID 6
  24:.\main.c      **** #define	PRX2_ID 7
ARM GAS  C:\Users\Kristian\AppData\Local\Temp\cc62PDWa.s 			page 2


  25:.\main.c      **** #define ACC3_ID 8
  26:.\main.c      **** #define GYR3_ID 9
  27:.\main.c      **** #define FLE3_ID 10
  28:.\main.c      **** #define	PRX3_ID 11
  29:.\main.c      **** #define ACC4_ID 12
  30:.\main.c      **** #define GYR4_ID 13
  31:.\main.c      **** #define FLE4_ID 14
  32:.\main.c      **** #define	PRX4_ID 15
  33:.\main.c      **** 
  34:.\main.c      **** 
  35:.\main.c      **** #define MAXREGNUM 96 //Maks antal registre at læse fra 
  36:.\main.c      **** #define MAXSENSDATA 66 // Maks antal som skal fyldes i array'et som sendes via BT
  37:.\main.c      **** #define START_SENSDATA 100 // Start byte, 
  38:.\main.c      **** #define DEFAULT_DATA -1 // Default data i array sættes til 0. 
  39:.\main.c      **** //Accelerometer ADXL345 defines
  40:.\main.c      **** #define ACCEL_ADDRESS 0x53 // jumperen sættes til GND 
  41:.\main.c      **** #define PWR_CTRL_REG 0x2D //Power control registeret Datablad side 26
  42:.\main.c      **** #define PWR_MODE (1<<3) // Sættes i measurement mode, standby til den skal måle (Strømbesparende
  43:.\main.c      **** #define DATAX0 0x32 //least significant 
  44:.\main.c      **** #define DATAX1 0x33 //most significant
  45:.\main.c      **** #define DATAY0 0x34
  46:.\main.c      **** #define DATAY1 0x35
  47:.\main.c      **** #define DATAZ0 0x36
  48:.\main.c      **** #define DATAZ1 0x37
  49:.\main.c      **** 
  50:.\main.c      **** //Gyroscope MPU6050 defines 
  51:.\main.c      **** #define GYRO_ADDRESS 0x68 //Jumperen sættes til GND 
  52:.\main.c      **** #define GYRO_XOUT_H 0x43 // Most significant
  53:.\main.c      **** #define GYRO_XOUT_L 0x44 // Least significant 
  54:.\main.c      **** #define GYRO_YOUT_H 0x45
  55:.\main.c      **** #define GYRO_YOUT_L 0x46
  56:.\main.c      **** #define GYRO_ZOUT_H 0x47
  57:.\main.c      **** #define GYRO_ZOUT_L 0x48
  58:.\main.c      **** 
  59:.\main.c      **** 
  60:.\main.c      **** 
  61:.\main.c      **** uint8_t numOfRegToRead = 0;	//current number of initialized sensor registers to read from 
  62:.\main.c      ****  
  63:.\main.c      **** int sensArray[MAXREGNUM][3];	//Array containing {i2c device address, registerToRead, dataTarget}
  64:.\main.c      **** 								//Initeres til 0 og fyldes op undervejs i funktionen setSensarray
  65:.\main.c      **** char dataArray[MAXSENSDATA];     // Array with id-number and data to send via BT
  66:.\main.c      **** 
  67:.\main.c      **** //Prototyper
  68:.\main.c      **** void setupI2C();
  69:.\main.c      **** void initUART();
  70:.\main.c      **** void initSensors();
  71:.\main.c      **** int readAllSensors();
  72:.\main.c      **** int readSensor(int i);
  73:.\main.c      **** void initADXL345();
  74:.\main.c      **** void initMPU6050();
  75:.\main.c      **** void setSensArray(int deviceAddress, int registerToRead, int dataTarget);
  76:.\main.c      **** void setdataArray(int ID, int x_data, int y_data, int z_data);
  77:.\main.c      **** int readI2C(int numOfReg);
  78:.\main.c      **** void convSensData();
  79:.\main.c      **** void handleI2CError();
  80:.\main.c      ****  
  81:.\main.c      **** CY_ISR(MY_ISR)
ARM GAS  C:\Users\Kristian\AppData\Local\Temp\cc62PDWa.s 			page 3


  82:.\main.c      **** {
  34              		.loc 1 82 0
  35              		.cfi_startproc
  36 0000 80B5     		push	{r7, lr}
  37              	.LCFI0:
  38              		.cfi_def_cfa_offset 8
  39              		.cfi_offset 7, -8
  40              		.cfi_offset 14, -4
  41 0002 00AF     		add	r7, sp, #0
  42              	.LCFI1:
  43              		.cfi_def_cfa_register 7
  83:.\main.c      **** }
  44              		.loc 1 83 0
  45 0004 BD46     		mov	sp, r7
  46              		@ sp needed for prologue
  47 0006 80BD     		pop	{r7, pc}
  48              		.cfi_endproc
  49              	.LFE33:
  50              		.size	MY_ISR, .-MY_ISR
  51              		.section	.text.main,"ax",%progbits
  52              		.align	2
  53              		.global	main
  54              		.code	16
  55              		.thumb_func
  56              		.type	main, %function
  57              	main:
  58              	.LFB34:
  84:.\main.c      **** 
  85:.\main.c      **** int main()
  86:.\main.c      **** {
  59              		.loc 1 86 0
  60              		.cfi_startproc
  61 0000 80B5     		push	{r7, lr}
  62              	.LCFI2:
  63              		.cfi_def_cfa_offset 8
  64              		.cfi_offset 7, -8
  65              		.cfi_offset 14, -4
  66 0002 00AF     		add	r7, sp, #0
  67              	.LCFI3:
  68              		.cfi_def_cfa_register 7
  87:.\main.c      ****     
  88:.\main.c      ****     initUART();
  69              		.loc 1 88 0
  70 0004 FFF7FEFF 		bl	initUART
  89:.\main.c      **** 	setupI2C(); 
  71              		.loc 1 89 0
  72 0008 FFF7FEFF 		bl	setupI2C
  90:.\main.c      **** 	
  91:.\main.c      **** 	initSensors();
  73              		.loc 1 91 0
  74 000c FFF7FEFF 		bl	initSensors
  92:.\main.c      **** 	
  93:.\main.c      **** 	//while(1)
  94:.\main.c      **** 		readAllSensors();
  75              		.loc 1 94 0
  76 0010 FFF7FEFF 		bl	readAllSensors
  95:.\main.c      ****         
ARM GAS  C:\Users\Kristian\AppData\Local\Temp\cc62PDWa.s 			page 4


  96:.\main.c      ****       /*  //Tester med UART at array'et bliver fyldt rigtig 
  97:.\main.c      ****         UART_1_UartPutString("Sensor Array is:\n\r"); 
  98:.\main.c      ****         int i;
  99:.\main.c      ****         char arrayString[20];
 100:.\main.c      ****         for(i = 0; i < numOfRegToRead; i++)
 101:.\main.c      ****         {
 102:.\main.c      ****             sprintf(arrayString, "%d: %d, %d, %d\n\r", i, sensArray[i][0], sensArray[i][1], sensArr
 103:.\main.c      ****             UART_1_UartPutString(arrayString); 
 104:.\main.c      ****         }*/
 105:.\main.c      ****         
 106:.\main.c      ****         //Tjekker at data bliver samlet korrekt. 
 107:.\main.c      ****         convSensData();
  77              		.loc 1 107 0
  78 0014 FFF7FEFF 		bl	convSensData
 108:.\main.c      ****             
 109:.\main.c      ****           
 110:.\main.c      ****             
 111:.\main.c      **** 		
 112:.\main.c      **** 	//return 0;
 113:.\main.c      **** }
  79              		.loc 1 113 0
  80 0018 181C     		mov	r0, r3
  81 001a BD46     		mov	sp, r7
  82              		@ sp needed for prologue
  83 001c 80BD     		pop	{r7, pc}
  84              		.cfi_endproc
  85              	.LFE34:
  86              		.size	main, .-main
  87 001e C046     		.section	.text.initSensors,"ax",%progbits
  88              		.align	2
  89              		.global	initSensors
  90              		.code	16
  91              		.thumb_func
  92              		.type	initSensors, %function
  93              	initSensors:
  94              	.LFB35:
 114:.\main.c      **** 
 115:.\main.c      **** void initSensors()
 116:.\main.c      **** {	
  95              		.loc 1 116 0
  96              		.cfi_startproc
  97 0000 80B5     		push	{r7, lr}
  98              	.LCFI4:
  99              		.cfi_def_cfa_offset 8
 100              		.cfi_offset 7, -8
 101              		.cfi_offset 14, -4
 102 0002 00AF     		add	r7, sp, #0
 103              	.LCFI5:
 104              		.cfi_def_cfa_register 7
 117:.\main.c      **** 	/***** INIT INDIVIDUAL SENSORS *****/
 118:.\main.c      **** 	//initMPU6050();	//Gyroscope
 119:.\main.c      **** 	initADXL345();	//Accellerometer
 105              		.loc 1 119 0
 106 0004 FFF7FEFF 		bl	initADXL345
 120:.\main.c      **** 	// ..osv
 121:.\main.c      **** }
 107              		.loc 1 121 0
ARM GAS  C:\Users\Kristian\AppData\Local\Temp\cc62PDWa.s 			page 5


 108 0008 BD46     		mov	sp, r7
 109              		@ sp needed for prologue
 110 000a 80BD     		pop	{r7, pc}
 111              		.cfi_endproc
 112              	.LFE35:
 113              		.size	initSensors, .-initSensors
 114              		.section	.text.setSensArray,"ax",%progbits
 115              		.align	2
 116              		.global	setSensArray
 117              		.code	16
 118              		.thumb_func
 119              		.type	setSensArray, %function
 120              	setSensArray:
 121              	.LFB36:
 122:.\main.c      **** 
 123:.\main.c      **** void setSensArray(int deviceAddress, int registerToRead, int dataTarget)
 124:.\main.c      **** {
 122              		.loc 1 124 0
 123              		.cfi_startproc
 124 0000 80B5     		push	{r7, lr}
 125              	.LCFI6:
 126              		.cfi_def_cfa_offset 8
 127              		.cfi_offset 7, -8
 128              		.cfi_offset 14, -4
 129 0002 84B0     		sub	sp, sp, #16
 130              	.LCFI7:
 131              		.cfi_def_cfa_offset 24
 132 0004 00AF     		add	r7, sp, #0
 133              	.LCFI8:
 134              		.cfi_def_cfa_register 7
 135 0006 F860     		str	r0, [r7, #12]
 136 0008 B960     		str	r1, [r7, #8]
 137 000a 7A60     		str	r2, [r7, #4]
 125:.\main.c      **** 	sensArray[numOfRegToRead][0]=deviceAddress;		//set device address
 138              		.loc 1 125 0
 139 000c 154B     		ldr	r3, .L5
 140 000e 1B78     		ldrb	r3, [r3]
 141 0010 1A1C     		mov	r2, r3
 142 0012 1549     		ldr	r1, .L5+4
 143 0014 131C     		mov	r3, r2
 144 0016 5B00     		lsl	r3, r3, #1
 145 0018 9B18     		add	r3, r3, r2
 146 001a 9B00     		lsl	r3, r3, #2
 147 001c FA68     		ldr	r2, [r7, #12]
 148 001e 5A50     		str	r2, [r3, r1]
 126:.\main.c      **** 	sensArray[numOfRegToRead][1]=registerToRead;	//set register for future read
 149              		.loc 1 126 0
 150 0020 104B     		ldr	r3, .L5
 151 0022 1B78     		ldrb	r3, [r3]
 152 0024 1A1C     		mov	r2, r3
 153 0026 1049     		ldr	r1, .L5+4
 154 0028 131C     		mov	r3, r2
 155 002a 5B00     		lsl	r3, r3, #1
 156 002c 9B18     		add	r3, r3, r2
 157 002e 9B00     		lsl	r3, r3, #2
 158 0030 CB18     		add	r3, r1, r3
 159 0032 0433     		add	r3, r3, #4
ARM GAS  C:\Users\Kristian\AppData\Local\Temp\cc62PDWa.s 			page 6


 160 0034 BA68     		ldr	r2, [r7, #8]
 161 0036 1A60     		str	r2, [r3]
 127:.\main.c      **** 	sensArray[numOfRegToRead][2]=dataTarget;		//set where to save read data
 162              		.loc 1 127 0
 163 0038 0A4B     		ldr	r3, .L5
 164 003a 1B78     		ldrb	r3, [r3]
 165 003c 1A1C     		mov	r2, r3
 166 003e 0A49     		ldr	r1, .L5+4
 167 0040 131C     		mov	r3, r2
 168 0042 5B00     		lsl	r3, r3, #1
 169 0044 9B18     		add	r3, r3, r2
 170 0046 9B00     		lsl	r3, r3, #2
 171 0048 CB18     		add	r3, r1, r3
 172 004a 0833     		add	r3, r3, #8
 173 004c 7A68     		ldr	r2, [r7, #4]
 174 004e 1A60     		str	r2, [r3]
 128:.\main.c      **** 	++numOfRegToRead;								//increment current number of places in array that are set
 175              		.loc 1 128 0
 176 0050 044B     		ldr	r3, .L5
 177 0052 1B78     		ldrb	r3, [r3]
 178 0054 0133     		add	r3, r3, #1
 179 0056 DAB2     		uxtb	r2, r3
 180 0058 024B     		ldr	r3, .L5
 181 005a 1A70     		strb	r2, [r3]
 129:.\main.c      **** 	
 130:.\main.c      **** 	//Skriv noget fejlsikring hvis numOfRegToRead kommer over 96, skal der sættes den pin høj på PS
 131:.\main.c      **** }
 182              		.loc 1 131 0
 183 005c BD46     		mov	sp, r7
 184 005e 04B0     		add	sp, sp, #16
 185              		@ sp needed for prologue
 186 0060 80BD     		pop	{r7, pc}
 187              	.L6:
 188 0062 C046     		.align	2
 189              	.L5:
 190 0064 00000000 		.word	numOfRegToRead
 191 0068 00000000 		.word	sensArray
 192              		.cfi_endproc
 193              	.LFE36:
 194              		.size	setSensArray, .-setSensArray
 195              		.section	.text.readAllSensors,"ax",%progbits
 196              		.align	2
 197              		.global	readAllSensors
 198              		.code	16
 199              		.thumb_func
 200              		.type	readAllSensors, %function
 201              	readAllSensors:
 202              	.LFB37:
 132:.\main.c      **** 
 133:.\main.c      **** int readAllSensors()
 134:.\main.c      **** {
 203              		.loc 1 134 0
 204              		.cfi_startproc
 205 0000 80B5     		push	{r7, lr}
 206              	.LCFI9:
 207              		.cfi_def_cfa_offset 8
 208              		.cfi_offset 7, -8
ARM GAS  C:\Users\Kristian\AppData\Local\Temp\cc62PDWa.s 			page 7


 209              		.cfi_offset 14, -4
 210 0002 82B0     		sub	sp, sp, #8
 211              	.LCFI10:
 212              		.cfi_def_cfa_offset 16
 213 0004 00AF     		add	r7, sp, #0
 214              	.LCFI11:
 215              		.cfi_def_cfa_register 7
 135:.\main.c      ****     int numOfReg; 
 136:.\main.c      **** 	for (numOfReg = 0; numOfReg < numOfRegToRead; numOfReg++)
 216              		.loc 1 136 0
 217 0006 0023     		mov	r3, #0
 218 0008 7B60     		str	r3, [r7, #4]
 219 000a 06E0     		b	.L8
 220              	.L9:
 137:.\main.c      **** 	{
 138:.\main.c      **** 		readI2C(numOfReg);
 221              		.loc 1 138 0 discriminator 2
 222 000c 7B68     		ldr	r3, [r7, #4]
 223 000e 181C     		mov	r0, r3
 224 0010 FFF7FEFF 		bl	readI2C
 136:.\main.c      **** 	for (numOfReg = 0; numOfReg < numOfRegToRead; numOfReg++)
 225              		.loc 1 136 0 discriminator 2
 226 0014 7B68     		ldr	r3, [r7, #4]
 227 0016 0133     		add	r3, r3, #1
 228 0018 7B60     		str	r3, [r7, #4]
 229              	.L8:
 136:.\main.c      **** 	for (numOfReg = 0; numOfReg < numOfRegToRead; numOfReg++)
 230              		.loc 1 136 0 is_stmt 0 discriminator 1
 231 001a 054B     		ldr	r3, .L10
 232 001c 1B78     		ldrb	r3, [r3]
 233 001e 1A1C     		mov	r2, r3
 234 0020 7B68     		ldr	r3, [r7, #4]
 235 0022 9A42     		cmp	r2, r3
 236 0024 F2DC     		bgt	.L9
 139:.\main.c      **** 	}
 140:.\main.c      **** 	
 141:.\main.c      **** }
 237              		.loc 1 141 0 is_stmt 1
 238 0026 181C     		mov	r0, r3
 239 0028 BD46     		mov	sp, r7
 240 002a 02B0     		add	sp, sp, #8
 241              		@ sp needed for prologue
 242 002c 80BD     		pop	{r7, pc}
 243              	.L11:
 244 002e C046     		.align	2
 245              	.L10:
 246 0030 00000000 		.word	numOfRegToRead
 247              		.cfi_endproc
 248              	.LFE37:
 249              		.size	readAllSensors, .-readAllSensors
 250              		.section	.text.readI2C,"ax",%progbits
 251              		.align	2
 252              		.global	readI2C
 253              		.code	16
 254              		.thumb_func
 255              		.type	readI2C, %function
 256              	readI2C:
ARM GAS  C:\Users\Kristian\AppData\Local\Temp\cc62PDWa.s 			page 8


 257              	.LFB38:
 142:.\main.c      **** 
 143:.\main.c      **** int readI2C(int numOfReg)
 144:.\main.c      **** {
 258              		.loc 1 144 0
 259              		.cfi_startproc
 260 0000 80B5     		push	{r7, lr}
 261              	.LCFI12:
 262              		.cfi_def_cfa_offset 8
 263              		.cfi_offset 7, -8
 264              		.cfi_offset 14, -4
 265 0002 84B0     		sub	sp, sp, #16
 266              	.LCFI13:
 267              		.cfi_def_cfa_offset 24
 268 0004 00AF     		add	r7, sp, #0
 269              	.LCFI14:
 270              		.cfi_def_cfa_register 7
 271 0006 7860     		str	r0, [r7, #4]
 145:.\main.c      ****    	uint8 rawData; 
 146:.\main.c      ****     
 147:.\main.c      **** 	if (I2C_1_I2CMasterSendStart(sensArray[numOfReg][0], I2C_1_I2C_WRITE_XFER_MODE) == I2C_1_I2C_MSTR_
 272              		.loc 1 147 0
 273 0008 2149     		ldr	r1, .L15
 274 000a 7A68     		ldr	r2, [r7, #4]
 275 000c 131C     		mov	r3, r2
 276 000e 5B00     		lsl	r3, r3, #1
 277 0010 9B18     		add	r3, r3, r2
 278 0012 9B00     		lsl	r3, r3, #2
 279 0014 5B58     		ldr	r3, [r3, r1]
 280 0016 181C     		mov	r0, r3
 281 0018 0021     		mov	r1, #0
 282 001a FFF7FEFF 		bl	I2C_1_I2CMasterSendStart
 283 001e 031C     		mov	r3, r0
 284 0020 002B     		cmp	r3, #0
 285 0022 31D1     		bne	.L14
 148:.\main.c      ****     { 
 149:.\main.c      ****         if(I2C_1_I2CMasterWriteByte(sensArray[numOfReg][1]) == I2C_1_I2C_MSTR_NO_ERROR)
 286              		.loc 1 149 0
 287 0024 1A49     		ldr	r1, .L15
 288 0026 7A68     		ldr	r2, [r7, #4]
 289 0028 131C     		mov	r3, r2
 290 002a 5B00     		lsl	r3, r3, #1
 291 002c 9B18     		add	r3, r3, r2
 292 002e 9B00     		lsl	r3, r3, #2
 293 0030 CB18     		add	r3, r1, r3
 294 0032 0433     		add	r3, r3, #4
 295 0034 1B68     		ldr	r3, [r3]
 296 0036 181C     		mov	r0, r3
 297 0038 FFF7FEFF 		bl	I2C_1_I2CMasterWriteByte
 298 003c 031C     		mov	r3, r0
 299 003e 002B     		cmp	r3, #0
 300 0040 22D1     		bne	.L14
 150:.\main.c      **** 		{
 151:.\main.c      ****             if(I2C_1_I2CMasterSendRestart(sensArray[numOfReg][0], I2C_1_I2C_READ_XFER_MODE) == I2C_
 301              		.loc 1 151 0
 302 0042 1349     		ldr	r1, .L15
 303 0044 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\Users\Kristian\AppData\Local\Temp\cc62PDWa.s 			page 9


 304 0046 131C     		mov	r3, r2
 305 0048 5B00     		lsl	r3, r3, #1
 306 004a 9B18     		add	r3, r3, r2
 307 004c 9B00     		lsl	r3, r3, #2
 308 004e 5B58     		ldr	r3, [r3, r1]
 309 0050 181C     		mov	r0, r3
 310 0052 0121     		mov	r1, #1
 311 0054 FFF7FEFF 		bl	I2C_1_I2CMasterSendRestart
 312 0058 031C     		mov	r3, r0
 313 005a 002B     		cmp	r3, #0
 314 005c 14D1     		bne	.L14
 152:.\main.c      **** 			{
 153:.\main.c      ****                 rawData = I2C_1_I2CMasterReadByte(I2C_1_I2C_NAK_DATA);
 315              		.loc 1 153 0
 316 005e 0120     		mov	r0, #1
 317 0060 FFF7FEFF 		bl	I2C_1_I2CMasterReadByte
 318 0064 021C     		mov	r2, r0
 319 0066 3B1C     		mov	r3, r7
 320 0068 0F33     		add	r3, r3, #15
 321 006a 1A70     		strb	r2, [r3]
 154:.\main.c      ****                 I2C_1_I2CMasterSendStop();
 322              		.loc 1 154 0
 323 006c FFF7FEFF 		bl	I2C_1_I2CMasterSendStop
 155:.\main.c      **** 				
 156:.\main.c      **** 				sensArray[numOfReg][2] = rawData; // gemmer rawData på den tilhørende plads i sensArray. 
 324              		.loc 1 156 0
 325 0070 3B1C     		mov	r3, r7
 326 0072 0F33     		add	r3, r3, #15
 327 0074 1978     		ldrb	r1, [r3]
 328 0076 0648     		ldr	r0, .L15
 329 0078 7A68     		ldr	r2, [r7, #4]
 330 007a 131C     		mov	r3, r2
 331 007c 5B00     		lsl	r3, r3, #1
 332 007e 9B18     		add	r3, r3, r2
 333 0080 9B00     		lsl	r3, r3, #2
 334 0082 C318     		add	r3, r0, r3
 335 0084 0833     		add	r3, r3, #8
 336 0086 1960     		str	r1, [r3]
 337              	.L14:
 157:.\main.c      **** 			}
 158:.\main.c      **** 		}
 159:.\main.c      **** 	}
 160:.\main.c      **** 				
 161:.\main.c      **** 	
 162:.\main.c      **** }
 338              		.loc 1 162 0
 339 0088 181C     		mov	r0, r3
 340 008a BD46     		mov	sp, r7
 341 008c 04B0     		add	sp, sp, #16
 342              		@ sp needed for prologue
 343 008e 80BD     		pop	{r7, pc}
 344              	.L16:
 345              		.align	2
 346              	.L15:
 347 0090 00000000 		.word	sensArray
 348              		.cfi_endproc
 349              	.LFE38:
ARM GAS  C:\Users\Kristian\AppData\Local\Temp\cc62PDWa.s 			page 10


 350              		.size	readI2C, .-readI2C
 351              		.section	.text.setupI2C,"ax",%progbits
 352              		.align	2
 353              		.global	setupI2C
 354              		.code	16
 355              		.thumb_func
 356              		.type	setupI2C, %function
 357              	setupI2C:
 358              	.LFB39:
 163:.\main.c      **** 
 164:.\main.c      **** void setupI2C()
 165:.\main.c      **** {
 359              		.loc 1 165 0
 360              		.cfi_startproc
 361 0000 80B5     		push	{r7, lr}
 362              	.LCFI15:
 363              		.cfi_def_cfa_offset 8
 364              		.cfi_offset 7, -8
 365              		.cfi_offset 14, -4
 366 0002 00AF     		add	r7, sp, #0
 367              	.LCFI16:
 368              		.cfi_def_cfa_register 7
 166:.\main.c      **** 	I2C_1_Start();
 369              		.loc 1 166 0
 370 0004 FFF7FEFF 		bl	I2C_1_Start
 167:.\main.c      ****     I2C_1_I2CMasterClearStatus();
 371              		.loc 1 167 0
 372 0008 FFF7FEFF 		bl	I2C_1_I2CMasterClearStatus
 168:.\main.c      **** }	
 373              		.loc 1 168 0
 374 000c BD46     		mov	sp, r7
 375              		@ sp needed for prologue
 376 000e 80BD     		pop	{r7, pc}
 377              		.cfi_endproc
 378              	.LFE39:
 379              		.size	setupI2C, .-setupI2C
 380              		.section	.text.initADXL345,"ax",%progbits
 381              		.align	2
 382              		.global	initADXL345
 383              		.code	16
 384              		.thumb_func
 385              		.type	initADXL345, %function
 386              	initADXL345:
 387              	.LFB40:
 169:.\main.c      **** 
 170:.\main.c      **** 
 171:.\main.c      **** //init accelerometer
 172:.\main.c      **** void initADXL345()
 173:.\main.c      **** {
 388              		.loc 1 173 0
 389              		.cfi_startproc
 390 0000 80B5     		push	{r7, lr}
 391              	.LCFI17:
 392              		.cfi_def_cfa_offset 8
 393              		.cfi_offset 7, -8
 394              		.cfi_offset 14, -4
 395 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Kristian\AppData\Local\Temp\cc62PDWa.s 			page 11


 396              	.LCFI18:
 397              		.cfi_def_cfa_register 7
 174:.\main.c      **** 	// Fylder ADXL345 ind i sensor array'et. 
 175:.\main.c      **** 	setSensArray(ACCEL_ADDRESS, DATAX0, DEFAULT_DATA);
 398              		.loc 1 175 0
 399 0004 0123     		mov	r3, #1
 400 0006 5B42     		neg	r3, r3
 401 0008 5320     		mov	r0, #83
 402 000a 3221     		mov	r1, #50
 403 000c 1A1C     		mov	r2, r3
 404 000e FFF7FEFF 		bl	setSensArray
 176:.\main.c      **** 	setSensArray(ACCEL_ADDRESS, DATAX1, DEFAULT_DATA);
 405              		.loc 1 176 0
 406 0012 0123     		mov	r3, #1
 407 0014 5B42     		neg	r3, r3
 408 0016 5320     		mov	r0, #83
 409 0018 3321     		mov	r1, #51
 410 001a 1A1C     		mov	r2, r3
 411 001c FFF7FEFF 		bl	setSensArray
 177:.\main.c      **** 	setSensArray(ACCEL_ADDRESS, DATAY0, DEFAULT_DATA);
 412              		.loc 1 177 0
 413 0020 0123     		mov	r3, #1
 414 0022 5B42     		neg	r3, r3
 415 0024 5320     		mov	r0, #83
 416 0026 3421     		mov	r1, #52
 417 0028 1A1C     		mov	r2, r3
 418 002a FFF7FEFF 		bl	setSensArray
 178:.\main.c      **** 	setSensArray(ACCEL_ADDRESS, DATAY1, DEFAULT_DATA);
 419              		.loc 1 178 0
 420 002e 0123     		mov	r3, #1
 421 0030 5B42     		neg	r3, r3
 422 0032 5320     		mov	r0, #83
 423 0034 3521     		mov	r1, #53
 424 0036 1A1C     		mov	r2, r3
 425 0038 FFF7FEFF 		bl	setSensArray
 179:.\main.c      **** 	setSensArray(ACCEL_ADDRESS, DATAZ0, DEFAULT_DATA);
 426              		.loc 1 179 0
 427 003c 0123     		mov	r3, #1
 428 003e 5B42     		neg	r3, r3
 429 0040 5320     		mov	r0, #83
 430 0042 3621     		mov	r1, #54
 431 0044 1A1C     		mov	r2, r3
 432 0046 FFF7FEFF 		bl	setSensArray
 180:.\main.c      **** 	setSensArray(ACCEL_ADDRESS, DATAZ1, DEFAULT_DATA);
 433              		.loc 1 180 0
 434 004a 0123     		mov	r3, #1
 435 004c 5B42     		neg	r3, r3
 436 004e 5320     		mov	r0, #83
 437 0050 3721     		mov	r1, #55
 438 0052 1A1C     		mov	r2, r3
 439 0054 FFF7FEFF 		bl	setSensArray
 181:.\main.c      **** 	
 182:.\main.c      **** 	//Opsætter til I2C 
 183:.\main.c      **** 	if(I2C_1_I2CMasterSendStart(ACCEL_ADDRESS, I2C_1_I2C_WRITE_XFER_MODE) == I2C_1_I2C_MSTR_NO_ERROR /
 440              		.loc 1 183 0
 441 0058 5320     		mov	r0, #83
 442 005a 0021     		mov	r1, #0
ARM GAS  C:\Users\Kristian\AppData\Local\Temp\cc62PDWa.s 			page 12


 443 005c FFF7FEFF 		bl	I2C_1_I2CMasterSendStart
 444 0060 031C     		mov	r3, r0
 445 0062 002B     		cmp	r3, #0
 446 0064 0DD1     		bne	.L18
 184:.\main.c      ****         && I2C_1_I2CMasterWriteByte(PWR_CTRL_REG) == I2C_1_I2C_MSTR_NO_ERROR // POWER CONTROL REGIS
 447              		.loc 1 184 0
 448 0066 2D20     		mov	r0, #45
 449 0068 FFF7FEFF 		bl	I2C_1_I2CMasterWriteByte
 450 006c 031C     		mov	r3, r0
 451 006e 002B     		cmp	r3, #0
 452 0070 07D1     		bne	.L18
 185:.\main.c      ****         && I2C_1_I2CMasterWriteByte(PWR_MODE) == I2C_1_I2C_MSTR_NO_ERROR) // Sættes i measurement 
 453              		.loc 1 185 0
 454 0072 0820     		mov	r0, #8
 455 0074 FFF7FEFF 		bl	I2C_1_I2CMasterWriteByte
 456 0078 031C     		mov	r3, r0
 457 007a 002B     		cmp	r3, #0
 458 007c 01D1     		bne	.L18
 186:.\main.c      **** 	handleI2CError();
 459              		.loc 1 186 0
 460 007e FFF7FEFF 		bl	handleI2CError
 461              	.L18:
 187:.\main.c      **** }
 462              		.loc 1 187 0
 463 0082 BD46     		mov	sp, r7
 464              		@ sp needed for prologue
 465 0084 80BD     		pop	{r7, pc}
 466              		.cfi_endproc
 467              	.LFE40:
 468              		.size	initADXL345, .-initADXL345
 469 0086 C046     		.section	.text.initMPU6050,"ax",%progbits
 470              		.align	2
 471              		.global	initMPU6050
 472              		.code	16
 473              		.thumb_func
 474              		.type	initMPU6050, %function
 475              	initMPU6050:
 476              	.LFB41:
 188:.\main.c      **** 
 189:.\main.c      **** //init gyroscope 
 190:.\main.c      **** void initMPU6050()
 191:.\main.c      **** {
 477              		.loc 1 191 0
 478              		.cfi_startproc
 479 0000 80B5     		push	{r7, lr}
 480              	.LCFI19:
 481              		.cfi_def_cfa_offset 8
 482              		.cfi_offset 7, -8
 483              		.cfi_offset 14, -4
 484 0002 00AF     		add	r7, sp, #0
 485              	.LCFI20:
 486              		.cfi_def_cfa_register 7
 192:.\main.c      **** 	// Fylder ADXL345 ind i sensor array'et. 
 193:.\main.c      **** 	setSensArray(GYRO_ADDRESS, GYRO_XOUT_H, DEFAULT_DATA);
 487              		.loc 1 193 0
 488 0004 0123     		mov	r3, #1
 489 0006 5B42     		neg	r3, r3
ARM GAS  C:\Users\Kristian\AppData\Local\Temp\cc62PDWa.s 			page 13


 490 0008 6820     		mov	r0, #104
 491 000a 4321     		mov	r1, #67
 492 000c 1A1C     		mov	r2, r3
 493 000e FFF7FEFF 		bl	setSensArray
 194:.\main.c      ****     setSensArray(GYRO_ADDRESS, GYRO_XOUT_L, DEFAULT_DATA);
 494              		.loc 1 194 0
 495 0012 0123     		mov	r3, #1
 496 0014 5B42     		neg	r3, r3
 497 0016 6820     		mov	r0, #104
 498 0018 4421     		mov	r1, #68
 499 001a 1A1C     		mov	r2, r3
 500 001c FFF7FEFF 		bl	setSensArray
 195:.\main.c      **** 	setSensArray(GYRO_ADDRESS, GYRO_YOUT_H, DEFAULT_DATA);
 501              		.loc 1 195 0
 502 0020 0123     		mov	r3, #1
 503 0022 5B42     		neg	r3, r3
 504 0024 6820     		mov	r0, #104
 505 0026 4521     		mov	r1, #69
 506 0028 1A1C     		mov	r2, r3
 507 002a FFF7FEFF 		bl	setSensArray
 196:.\main.c      **** 	setSensArray(GYRO_ADDRESS, GYRO_YOUT_L, DEFAULT_DATA);
 508              		.loc 1 196 0
 509 002e 0123     		mov	r3, #1
 510 0030 5B42     		neg	r3, r3
 511 0032 6820     		mov	r0, #104
 512 0034 4621     		mov	r1, #70
 513 0036 1A1C     		mov	r2, r3
 514 0038 FFF7FEFF 		bl	setSensArray
 197:.\main.c      **** 	setSensArray(GYRO_ADDRESS, GYRO_ZOUT_H, DEFAULT_DATA);
 515              		.loc 1 197 0
 516 003c 0123     		mov	r3, #1
 517 003e 5B42     		neg	r3, r3
 518 0040 6820     		mov	r0, #104
 519 0042 4721     		mov	r1, #71
 520 0044 1A1C     		mov	r2, r3
 521 0046 FFF7FEFF 		bl	setSensArray
 198:.\main.c      **** 	setSensArray(GYRO_ADDRESS, GYRO_ZOUT_L, DEFAULT_DATA);
 522              		.loc 1 198 0
 523 004a 0123     		mov	r3, #1
 524 004c 5B42     		neg	r3, r3
 525 004e 6820     		mov	r0, #104
 526 0050 4821     		mov	r1, #72
 527 0052 1A1C     		mov	r2, r3
 528 0054 FFF7FEFF 		bl	setSensArray
 199:.\main.c      **** 	
 200:.\main.c      **** 	//Opsætter til I2C 
 201:.\main.c      **** 	if(I2C_1_I2CMasterSendStart(GYRO_ADDRESS, I2C_1_I2C_WRITE_XFER_MODE) == I2C_1_I2C_MSTR_NO_ERROR) /
 529              		.loc 1 201 0
 530 0058 6820     		mov	r0, #104
 531 005a 0021     		mov	r1, #0
 532 005c FFF7FEFF 		bl	I2C_1_I2CMasterSendStart
 533 0060 031C     		mov	r3, r0
 534 0062 002B     		cmp	r3, #0
 535 0064 01D1     		bne	.L20
 202:.\main.c      **** 	handleI2CError();
 536              		.loc 1 202 0
 537 0066 FFF7FEFF 		bl	handleI2CError
ARM GAS  C:\Users\Kristian\AppData\Local\Temp\cc62PDWa.s 			page 14


 538              	.L20:
 203:.\main.c      **** }
 539              		.loc 1 203 0
 540 006a BD46     		mov	sp, r7
 541              		@ sp needed for prologue
 542 006c 80BD     		pop	{r7, pc}
 543              		.cfi_endproc
 544              	.LFE41:
 545              		.size	initMPU6050, .-initMPU6050
 546 006e C046     		.section	.text.convSensData,"ax",%progbits
 547              		.align	2
 548              		.global	convSensData
 549              		.code	16
 550              		.thumb_func
 551              		.type	convSensData, %function
 552              	convSensData:
 553              	.LFB42:
 204:.\main.c      **** 
 205:.\main.c      **** void convSensData()
 206:.\main.c      **** {
 554              		.loc 1 206 0
 555              		.cfi_startproc
 556 0000 80B5     		push	{r7, lr}
 557              	.LCFI21:
 558              		.cfi_def_cfa_offset 8
 559              		.cfi_offset 7, -8
 560              		.cfi_offset 14, -4
 561 0002 84B0     		sub	sp, sp, #16
 562              	.LCFI22:
 563              		.cfi_def_cfa_offset 24
 564 0004 00AF     		add	r7, sp, #0
 565              	.LCFI23:
 566              		.cfi_def_cfa_register 7
 207:.\main.c      ****     //ADXL345
 208:.\main.c      ****     int16 x, y, z; // Da det er to 8 bit registre som skal lægges sammen
 209:.\main.c      ****     unsigned char x1, y1, z1; 
 210:.\main.c      ****     //Samler most significant og least significant for X
 211:.\main.c      ****     x = sensArray[1][2]<< 8; 
 567              		.loc 1 211 0
 568 0006 364B     		ldr	r3, .L26
 569 0008 5B69     		ldr	r3, [r3, #20]
 570 000a 1A02     		lsl	r2, r3, #8
 571 000c 3B1C     		mov	r3, r7
 572 000e 0E33     		add	r3, r3, #14
 573 0010 1A80     		strh	r2, [r3]
 212:.\main.c      ****     x+= sensArray[0][2];
 574              		.loc 1 212 0
 575 0012 334B     		ldr	r3, .L26
 576 0014 9B68     		ldr	r3, [r3, #8]
 577 0016 9AB2     		uxth	r2, r3
 578 0018 3B1C     		mov	r3, r7
 579 001a 0E33     		add	r3, r3, #14
 580 001c 1B88     		ldrh	r3, [r3]
 581 001e D318     		add	r3, r2, r3
 582 0020 9AB2     		uxth	r2, r3
 583 0022 3B1C     		mov	r3, r7
 584 0024 0E33     		add	r3, r3, #14
ARM GAS  C:\Users\Kristian\AppData\Local\Temp\cc62PDWa.s 			page 15


 585 0026 1A80     		strh	r2, [r3]
 213:.\main.c      ****     
 214:.\main.c      ****     //Samler most significant og least significant for Y
 215:.\main.c      ****     y = sensArray[3][2]<< 8; 
 586              		.loc 1 215 0
 587 0028 2D4B     		ldr	r3, .L26
 588 002a DB6A     		ldr	r3, [r3, #44]
 589 002c 1A02     		lsl	r2, r3, #8
 590 002e 3B1C     		mov	r3, r7
 591 0030 0C33     		add	r3, r3, #12
 592 0032 1A80     		strh	r2, [r3]
 216:.\main.c      ****     y+= sensArray[2][2];
 593              		.loc 1 216 0
 594 0034 2A4B     		ldr	r3, .L26
 595 0036 1B6A     		ldr	r3, [r3, #32]
 596 0038 9AB2     		uxth	r2, r3
 597 003a 3B1C     		mov	r3, r7
 598 003c 0C33     		add	r3, r3, #12
 599 003e 1B88     		ldrh	r3, [r3]
 600 0040 D318     		add	r3, r2, r3
 601 0042 9AB2     		uxth	r2, r3
 602 0044 3B1C     		mov	r3, r7
 603 0046 0C33     		add	r3, r3, #12
 604 0048 1A80     		strh	r2, [r3]
 217:.\main.c      ****     
 218:.\main.c      ****     //Samler most significant og least significant for Z
 219:.\main.c      ****     z = sensArray[5][2]<< 8; 
 605              		.loc 1 219 0
 606 004a 254B     		ldr	r3, .L26
 607 004c 5B6C     		ldr	r3, [r3, #68]
 608 004e 1A02     		lsl	r2, r3, #8
 609 0050 3B1C     		mov	r3, r7
 610 0052 0A33     		add	r3, r3, #10
 611 0054 1A80     		strh	r2, [r3]
 220:.\main.c      ****     z+= sensArray[4][2];
 612              		.loc 1 220 0
 613 0056 224B     		ldr	r3, .L26
 614 0058 9B6B     		ldr	r3, [r3, #56]
 615 005a 9AB2     		uxth	r2, r3
 616 005c 3B1C     		mov	r3, r7
 617 005e 0A33     		add	r3, r3, #10
 618 0060 1B88     		ldrh	r3, [r3]
 619 0062 D318     		add	r3, r2, r3
 620 0064 9AB2     		uxth	r2, r3
 621 0066 3B1C     		mov	r3, r7
 622 0068 0A33     		add	r3, r3, #10
 623 006a 1A80     		strh	r2, [r3]
 221:.\main.c      ****     
 222:.\main.c      ****    
 223:.\main.c      ****     
 224:.\main.c      ****    
 225:.\main.c      ****     /*char ADXL345_data[32];
 226:.\main.c      ****     sprintf(ADXL345_data, "\n\rx is: %d, y is: %d, z is: %d\n\r", x, y, z);
 227:.\main.c      ****     UART_1_UartPutString(ADXL345_data); */
 228:.\main.c      ****     
 229:.\main.c      ****     //conversion from int16 to char which is the scale midi can receive
 230:.\main.c      ****     x1 = (x+512)/8; 
ARM GAS  C:\Users\Kristian\AppData\Local\Temp\cc62PDWa.s 			page 16


 624              		.loc 1 230 0
 625 006c 3B1C     		mov	r3, r7
 626 006e 0E33     		add	r3, r3, #14
 627 0070 0022     		mov	r2, #0
 628 0072 9B5E     		ldrsh	r3, [r3, r2]
 629 0074 8022     		mov	r2, #128
 630 0076 9200     		lsl	r2, r2, #2
 631 0078 9B18     		add	r3, r3, r2
 632 007a 002B     		cmp	r3, #0
 633 007c 00DA     		bge	.L23
 634 007e 0733     		add	r3, r3, #7
 635              	.L23:
 636 0080 DB10     		asr	r3, r3, #3
 637 0082 1A1C     		mov	r2, r3
 638 0084 3B1C     		mov	r3, r7
 639 0086 0933     		add	r3, r3, #9
 640 0088 1A70     		strb	r2, [r3]
 231:.\main.c      ****     y1 = (y+512)/8;
 641              		.loc 1 231 0
 642 008a 3B1C     		mov	r3, r7
 643 008c 0C33     		add	r3, r3, #12
 644 008e 0022     		mov	r2, #0
 645 0090 9B5E     		ldrsh	r3, [r3, r2]
 646 0092 8022     		mov	r2, #128
 647 0094 9200     		lsl	r2, r2, #2
 648 0096 9B18     		add	r3, r3, r2
 649 0098 002B     		cmp	r3, #0
 650 009a 00DA     		bge	.L24
 651 009c 0733     		add	r3, r3, #7
 652              	.L24:
 653 009e DB10     		asr	r3, r3, #3
 654 00a0 1A1C     		mov	r2, r3
 655 00a2 3B1C     		mov	r3, r7
 656 00a4 0833     		add	r3, r3, #8
 657 00a6 1A70     		strb	r2, [r3]
 232:.\main.c      ****     z1 = (z+512)/8;
 658              		.loc 1 232 0
 659 00a8 3B1C     		mov	r3, r7
 660 00aa 0A33     		add	r3, r3, #10
 661 00ac 0022     		mov	r2, #0
 662 00ae 9B5E     		ldrsh	r3, [r3, r2]
 663 00b0 8022     		mov	r2, #128
 664 00b2 9200     		lsl	r2, r2, #2
 665 00b4 9B18     		add	r3, r3, r2
 666 00b6 002B     		cmp	r3, #0
 667 00b8 00DA     		bge	.L25
 668 00ba 0733     		add	r3, r3, #7
 669              	.L25:
 670 00bc DB10     		asr	r3, r3, #3
 671 00be 1A1C     		mov	r2, r3
 672 00c0 FB1D     		add	r3, r7, #7
 673 00c2 1A70     		strb	r2, [r3]
 233:.\main.c      ****     
 234:.\main.c      ****     setdataArray(ACC1_ID, x1, y1, z1);
 674              		.loc 1 234 0
 675 00c4 3B1C     		mov	r3, r7
 676 00c6 0933     		add	r3, r3, #9
ARM GAS  C:\Users\Kristian\AppData\Local\Temp\cc62PDWa.s 			page 17


 677 00c8 1978     		ldrb	r1, [r3]
 678 00ca 3B1C     		mov	r3, r7
 679 00cc 0833     		add	r3, r3, #8
 680 00ce 1A78     		ldrb	r2, [r3]
 681 00d0 FB1D     		add	r3, r7, #7
 682 00d2 1B78     		ldrb	r3, [r3]
 683 00d4 0020     		mov	r0, #0
 684 00d6 FFF7FEFF 		bl	setdataArray
 235:.\main.c      ****     
 236:.\main.c      ****    
 237:.\main.c      ****     /*char ADXL345_data2[32];
 238:.\main.c      ****     sprintf(ADXL345_data2, "\n\rx is: %d, y is: %d, z is: %d\n\r", x1, y1, z1);
 239:.\main.c      ****     UART_1_UartPutString(ADXL345_data2); */
 240:.\main.c      **** }
 685              		.loc 1 240 0
 686 00da BD46     		mov	sp, r7
 687 00dc 04B0     		add	sp, sp, #16
 688              		@ sp needed for prologue
 689 00de 80BD     		pop	{r7, pc}
 690              	.L27:
 691              		.align	2
 692              	.L26:
 693 00e0 00000000 		.word	sensArray
 694              		.cfi_endproc
 695              	.LFE42:
 696              		.size	convSensData, .-convSensData
 697              		.section	.text.setdataArray,"ax",%progbits
 698              		.align	2
 699              		.global	setdataArray
 700              		.code	16
 701              		.thumb_func
 702              		.type	setdataArray, %function
 703              	setdataArray:
 704              	.LFB43:
 241:.\main.c      **** 
 242:.\main.c      **** void setdataArray(int ID, int x_data, int y_data, int z_data)
 243:.\main.c      **** {
 705              		.loc 1 243 0
 706              		.cfi_startproc
 707 0000 80B5     		push	{r7, lr}
 708              	.LCFI24:
 709              		.cfi_def_cfa_offset 8
 710              		.cfi_offset 7, -8
 711              		.cfi_offset 14, -4
 712 0002 86B0     		sub	sp, sp, #24
 713              	.LCFI25:
 714              		.cfi_def_cfa_offset 32
 715 0004 00AF     		add	r7, sp, #0
 716              	.LCFI26:
 717              		.cfi_def_cfa_register 7
 718 0006 F860     		str	r0, [r7, #12]
 719 0008 B960     		str	r1, [r7, #8]
 720 000a 7A60     		str	r2, [r7, #4]
 721 000c 3B60     		str	r3, [r7]
 244:.\main.c      ****     int i;
 245:.\main.c      ****     dataArray[0] = START_SENSDATA; //Sætter de første 5 pladser i Array'et
 722              		.loc 1 245 0
ARM GAS  C:\Users\Kristian\AppData\Local\Temp\cc62PDWa.s 			page 18


 723 000e 2A4B     		ldr	r3, .L32
 724 0010 6422     		mov	r2, #100
 725 0012 1A70     		strb	r2, [r3]
 246:.\main.c      ****     dataArray[1] = 48;//ID+1; 
 726              		.loc 1 246 0
 727 0014 284B     		ldr	r3, .L32
 728 0016 3022     		mov	r2, #48
 729 0018 5A70     		strb	r2, [r3, #1]
 247:.\main.c      ****     dataArray[2] = 49;//x_data+1;
 730              		.loc 1 247 0
 731 001a 274B     		ldr	r3, .L32
 732 001c 3122     		mov	r2, #49
 733 001e 9A70     		strb	r2, [r3, #2]
 248:.\main.c      ****     dataArray[3] = 50;//y_data+1;
 734              		.loc 1 248 0
 735 0020 254B     		ldr	r3, .L32
 736 0022 3222     		mov	r2, #50
 737 0024 DA70     		strb	r2, [r3, #3]
 249:.\main.c      ****     dataArray[4] = 51;//z_data+1;
 738              		.loc 1 249 0
 739 0026 244B     		ldr	r3, .L32
 740 0028 3322     		mov	r2, #51
 741 002a 1A71     		strb	r2, [r3, #4]
 250:.\main.c      ****     dataArray[5] = 52;
 742              		.loc 1 250 0
 743 002c 224B     		ldr	r3, .L32
 744 002e 3422     		mov	r2, #52
 745 0030 5A71     		strb	r2, [r3, #5]
 251:.\main.c      ****     dataArray[6] = 53;
 746              		.loc 1 251 0
 747 0032 214B     		ldr	r3, .L32
 748 0034 3522     		mov	r2, #53
 749 0036 9A71     		strb	r2, [r3, #6]
 252:.\main.c      ****     dataArray[7] = 54;
 750              		.loc 1 252 0
 751 0038 1F4B     		ldr	r3, .L32
 752 003a 3622     		mov	r2, #54
 753 003c DA71     		strb	r2, [r3, #7]
 253:.\main.c      ****     dataArray[8] = 55; //Sætter de første 5 pladser i Array'et
 754              		.loc 1 253 0
 755 003e 1E4B     		ldr	r3, .L32
 756 0040 3722     		mov	r2, #55
 757 0042 1A72     		strb	r2, [r3, #8]
 254:.\main.c      ****     dataArray[9] = 56; 
 758              		.loc 1 254 0
 759 0044 1C4B     		ldr	r3, .L32
 760 0046 3822     		mov	r2, #56
 761 0048 5A72     		strb	r2, [r3, #9]
 255:.\main.c      ****     dataArray[10] = 57;//x_data+1;
 762              		.loc 1 255 0
 763 004a 1B4B     		ldr	r3, .L32
 764 004c 3922     		mov	r2, #57
 765 004e 9A72     		strb	r2, [r3, #10]
 256:.\main.c      ****     dataArray[11] = 58;//y_data+1;
 766              		.loc 1 256 0
 767 0050 194B     		ldr	r3, .L32
 768 0052 3A22     		mov	r2, #58
ARM GAS  C:\Users\Kristian\AppData\Local\Temp\cc62PDWa.s 			page 19


 769 0054 DA72     		strb	r2, [r3, #11]
 257:.\main.c      ****     dataArray[12] = 59;//z_data+1;
 770              		.loc 1 257 0
 771 0056 184B     		ldr	r3, .L32
 772 0058 3B22     		mov	r2, #59
 773 005a 1A73     		strb	r2, [r3, #12]
 258:.\main.c      ****     dataArray[13] = 60;
 774              		.loc 1 258 0
 775 005c 164B     		ldr	r3, .L32
 776 005e 3C22     		mov	r2, #60
 777 0060 5A73     		strb	r2, [r3, #13]
 259:.\main.c      ****     dataArray[14] = 61;
 778              		.loc 1 259 0
 779 0062 154B     		ldr	r3, .L32
 780 0064 3D22     		mov	r2, #61
 781 0066 9A73     		strb	r2, [r3, #14]
 260:.\main.c      ****     dataArray[15] = 62;
 782              		.loc 1 260 0
 783 0068 134B     		ldr	r3, .L32
 784 006a 3E22     		mov	r2, #62
 785 006c DA73     		strb	r2, [r3, #15]
 261:.\main.c      ****    
 262:.\main.c      ****     
 263:.\main.c      ****     for(i = 16; i<MAXSENSDATA; i++) //Sætter de resterende pladser i array'et til 1. 
 786              		.loc 1 263 0
 787 006e 1023     		mov	r3, #16
 788 0070 7B61     		str	r3, [r7, #20]
 789 0072 07E0     		b	.L29
 790              	.L30:
 264:.\main.c      ****     {
 265:.\main.c      ****         dataArray[i] = 48; 
 791              		.loc 1 265 0 discriminator 2
 792 0074 104A     		ldr	r2, .L32
 793 0076 7B69     		ldr	r3, [r7, #20]
 794 0078 D318     		add	r3, r2, r3
 795 007a 3022     		mov	r2, #48
 796 007c 1A70     		strb	r2, [r3]
 263:.\main.c      ****     for(i = 16; i<MAXSENSDATA; i++) //Sætter de resterende pladser i array'et til 1. 
 797              		.loc 1 263 0 discriminator 2
 798 007e 7B69     		ldr	r3, [r7, #20]
 799 0080 0133     		add	r3, r3, #1
 800 0082 7B61     		str	r3, [r7, #20]
 801              	.L29:
 263:.\main.c      ****     for(i = 16; i<MAXSENSDATA; i++) //Sætter de resterende pladser i array'et til 1. 
 802              		.loc 1 263 0 is_stmt 0 discriminator 1
 803 0084 7B69     		ldr	r3, [r7, #20]
 804 0086 412B     		cmp	r3, #65
 805 0088 F4DD     		ble	.L30
 266:.\main.c      ****     }
 267:.\main.c      ****     dataArray[64] = 66;
 806              		.loc 1 267 0 is_stmt 1
 807 008a 0B4A     		ldr	r2, .L32
 808 008c 4023     		mov	r3, #64
 809 008e 4221     		mov	r1, #66
 810 0090 D154     		strb	r1, [r2, r3]
 268:.\main.c      ****     dataArray[63] = 65;
 811              		.loc 1 268 0
ARM GAS  C:\Users\Kristian\AppData\Local\Temp\cc62PDWa.s 			page 20


 812 0092 094A     		ldr	r2, .L32
 813 0094 3F23     		mov	r3, #63
 814 0096 4121     		mov	r1, #65
 815 0098 D154     		strb	r1, [r2, r3]
 269:.\main.c      ****     dataArray[65] = 0; 
 816              		.loc 1 269 0
 817 009a 074A     		ldr	r2, .L32
 818 009c 4123     		mov	r3, #65
 819 009e 0021     		mov	r1, #0
 820 00a0 D154     		strb	r1, [r2, r3]
 821              	.L31:
 270:.\main.c      ****     
 271:.\main.c      ****     // Sender dataArray over UART vha. forløkke og PutChar
 272:.\main.c      ****            while(1)
 273:.\main.c      ****            {
 274:.\main.c      ****             UART_1_UartPutString(dataArray);
 822              		.loc 1 274 0 discriminator 1
 823 00a2 054B     		ldr	r3, .L32
 824 00a4 181C     		mov	r0, r3
 825 00a6 FFF7FEFF 		bl	UART_1_UartPutString
 275:.\main.c      ****             CyDelay(2000);
 826              		.loc 1 275 0 discriminator 1
 827 00aa FA23     		mov	r3, #250
 828 00ac DB00     		lsl	r3, r3, #3
 829 00ae 181C     		mov	r0, r3
 830 00b0 FFF7FEFF 		bl	CyDelay
 276:.\main.c      ****            }
 831              		.loc 1 276 0 discriminator 1
 832 00b4 F5E7     		b	.L31
 833              	.L33:
 834 00b6 C046     		.align	2
 835              	.L32:
 836 00b8 00000000 		.word	dataArray
 837              		.cfi_endproc
 838              	.LFE43:
 839              		.size	setdataArray, .-setdataArray
 840              		.section	.text.initUART,"ax",%progbits
 841              		.align	2
 842              		.global	initUART
 843              		.code	16
 844              		.thumb_func
 845              		.type	initUART, %function
 846              	initUART:
 847              	.LFB44:
 277:.\main.c      **** }
 278:.\main.c      ****     
 279:.\main.c      **** 
 280:.\main.c      **** //til test UART
 281:.\main.c      **** void initUART()
 282:.\main.c      **** {
 848              		.loc 1 282 0
 849              		.cfi_startproc
 850 0000 80B5     		push	{r7, lr}
 851              	.LCFI27:
 852              		.cfi_def_cfa_offset 8
 853              		.cfi_offset 7, -8
 854              		.cfi_offset 14, -4
ARM GAS  C:\Users\Kristian\AppData\Local\Temp\cc62PDWa.s 			page 21


 855 0002 00AF     		add	r7, sp, #0
 856              	.LCFI28:
 857              		.cfi_def_cfa_register 7
 283:.\main.c      ****     UART_1_Start();
 858              		.loc 1 283 0
 859 0004 FFF7FEFF 		bl	UART_1_Start
 284:.\main.c      ****    /* UART_1_UartPutString("This is a a test of body main\n\r\n"); */
 285:.\main.c      **** }
 860              		.loc 1 285 0
 861 0008 BD46     		mov	sp, r7
 862              		@ sp needed for prologue
 863 000a 80BD     		pop	{r7, pc}
 864              		.cfi_endproc
 865              	.LFE44:
 866              		.size	initUART, .-initUART
 867              		.section	.text.handleI2CError,"ax",%progbits
 868              		.align	2
 869              		.global	handleI2CError
 870              		.code	16
 871              		.thumb_func
 872              		.type	handleI2CError, %function
 873              	handleI2CError:
 874              	.LFB45:
 286:.\main.c      **** 
 287:.\main.c      **** void handleI2CError()
 288:.\main.c      **** {
 875              		.loc 1 288 0
 876              		.cfi_startproc
 877 0000 80B5     		push	{r7, lr}
 878              	.LCFI29:
 879              		.cfi_def_cfa_offset 8
 880              		.cfi_offset 7, -8
 881              		.cfi_offset 14, -4
 882 0002 00AF     		add	r7, sp, #0
 883              	.LCFI30:
 884              		.cfi_def_cfa_register 7
 289:.\main.c      ****     I2C_1_I2CMasterSendStop();	 
 885              		.loc 1 289 0
 886 0004 FFF7FEFF 		bl	I2C_1_I2CMasterSendStop
 290:.\main.c      **** }
 887              		.loc 1 290 0
 888 0008 BD46     		mov	sp, r7
 889              		@ sp needed for prologue
 890 000a 80BD     		pop	{r7, pc}
 891              		.cfi_endproc
 892              	.LFE45:
 893              		.size	handleI2CError, .-handleI2CError
 894              		.text
 895              	.Letext0:
 896              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.0\\psoc creator\\import\\gnu_cs\\arm\\4
 897              		.file 3 "./Generated_Source/PSoC4/cytypes.h"
 898              		.section	.debug_info,"",%progbits
 899              	.Ldebug_info0:
 900 0000 23030000 		.4byte	0x323
 901 0004 0200     		.2byte	0x2
 902 0006 00000000 		.4byte	.Ldebug_abbrev0
 903 000a 04       		.byte	0x4
ARM GAS  C:\Users\Kristian\AppData\Local\Temp\cc62PDWa.s 			page 22


 904 000b 01       		.uleb128 0x1
 905 000c 97010000 		.4byte	.LASF38
 906 0010 01       		.byte	0x1
 907 0011 E6000000 		.4byte	.LASF39
 908 0015 07000000 		.4byte	.LASF40
 909 0019 00000000 		.4byte	.Ldebug_ranges0+0
 910 001d 00000000 		.4byte	0
 911 0021 00000000 		.4byte	0
 912 0025 00000000 		.4byte	.Ldebug_line0
 913 0029 02       		.uleb128 0x2
 914 002a 01       		.byte	0x1
 915 002b 06       		.byte	0x6
 916 002c 03020000 		.4byte	.LASF0
 917 0030 03       		.uleb128 0x3
 918 0031 60000000 		.4byte	.LASF9
 919 0035 02       		.byte	0x2
 920 0036 2A       		.byte	0x2a
 921 0037 3B000000 		.4byte	0x3b
 922 003b 02       		.uleb128 0x2
 923 003c 01       		.byte	0x1
 924 003d 08       		.byte	0x8
 925 003e 9E000000 		.4byte	.LASF1
 926 0042 02       		.uleb128 0x2
 927 0043 02       		.byte	0x2
 928 0044 05       		.byte	0x5
 929 0045 7E010000 		.4byte	.LASF2
 930 0049 02       		.uleb128 0x2
 931 004a 02       		.byte	0x2
 932 004b 07       		.byte	0x7
 933 004c 4D000000 		.4byte	.LASF3
 934 0050 02       		.uleb128 0x2
 935 0051 04       		.byte	0x4
 936 0052 05       		.byte	0x5
 937 0053 E8010000 		.4byte	.LASF4
 938 0057 02       		.uleb128 0x2
 939 0058 04       		.byte	0x4
 940 0059 07       		.byte	0x7
 941 005a BB000000 		.4byte	.LASF5
 942 005e 02       		.uleb128 0x2
 943 005f 08       		.byte	0x8
 944 0060 05       		.byte	0x5
 945 0061 45010000 		.4byte	.LASF6
 946 0065 02       		.uleb128 0x2
 947 0066 08       		.byte	0x8
 948 0067 07       		.byte	0x7
 949 0068 10010000 		.4byte	.LASF7
 950 006c 04       		.uleb128 0x4
 951 006d 04       		.byte	0x4
 952 006e 05       		.byte	0x5
 953 006f 696E7400 		.ascii	"int\000"
 954 0073 02       		.uleb128 0x2
 955 0074 04       		.byte	0x4
 956 0075 07       		.byte	0x7
 957 0076 03010000 		.4byte	.LASF8
 958 007a 03       		.uleb128 0x3
 959 007b CD000000 		.4byte	.LASF10
 960 007f 03       		.byte	0x3
ARM GAS  C:\Users\Kristian\AppData\Local\Temp\cc62PDWa.s 			page 23


 961 0080 5B       		.byte	0x5b
 962 0081 3B000000 		.4byte	0x3b
 963 0085 03       		.uleb128 0x3
 964 0086 B5000000 		.4byte	.LASF11
 965 008a 03       		.byte	0x3
 966 008b 5F       		.byte	0x5f
 967 008c 42000000 		.4byte	0x42
 968 0090 02       		.uleb128 0x2
 969 0091 04       		.byte	0x4
 970 0092 04       		.byte	0x4
 971 0093 8B000000 		.4byte	.LASF12
 972 0097 02       		.uleb128 0x2
 973 0098 08       		.byte	0x8
 974 0099 04       		.byte	0x4
 975 009a DF000000 		.4byte	.LASF13
 976 009e 02       		.uleb128 0x2
 977 009f 01       		.byte	0x1
 978 00a0 08       		.byte	0x8
 979 00a1 53010000 		.4byte	.LASF14
 980 00a5 02       		.uleb128 0x2
 981 00a6 04       		.byte	0x4
 982 00a7 07       		.byte	0x7
 983 00a8 3C010000 		.4byte	.LASF15
 984 00ac 05       		.uleb128 0x5
 985 00ad 01       		.byte	0x1
 986 00ae 46000000 		.4byte	.LASF16
 987 00b2 01       		.byte	0x1
 988 00b3 51       		.byte	0x51
 989 00b4 01       		.byte	0x1
 990 00b5 00000000 		.4byte	.LFB33
 991 00b9 08000000 		.4byte	.LFE33
 992 00bd 00000000 		.4byte	.LLST0
 993 00c1 01       		.byte	0x1
 994 00c2 06       		.uleb128 0x6
 995 00c3 01       		.byte	0x1
 996 00c4 FE000000 		.4byte	.LASF17
 997 00c8 01       		.byte	0x1
 998 00c9 55       		.byte	0x55
 999 00ca 6C000000 		.4byte	0x6c
 1000 00ce 00000000 		.4byte	.LFB34
 1001 00d2 1E000000 		.4byte	.LFE34
 1002 00d6 2C000000 		.4byte	.LLST1
 1003 00da 01       		.byte	0x1
 1004 00db 07       		.uleb128 0x7
 1005 00dc 01       		.byte	0x1
 1006 00dd D3000000 		.4byte	.LASF25
 1007 00e1 01       		.byte	0x1
 1008 00e2 73       		.byte	0x73
 1009 00e3 00000000 		.4byte	.LFB35
 1010 00e7 0C000000 		.4byte	.LFE35
 1011 00eb 58000000 		.4byte	.LLST2
 1012 00ef 01       		.byte	0x1
 1013 00f0 08       		.uleb128 0x8
 1014 00f1 01       		.byte	0x1
 1015 00f2 58010000 		.4byte	.LASF21
 1016 00f6 01       		.byte	0x1
 1017 00f7 7B       		.byte	0x7b
ARM GAS  C:\Users\Kristian\AppData\Local\Temp\cc62PDWa.s 			page 24


 1018 00f8 01       		.byte	0x1
 1019 00f9 00000000 		.4byte	.LFB36
 1020 00fd 6C000000 		.4byte	.LFE36
 1021 0101 84000000 		.4byte	.LLST3
 1022 0105 01       		.byte	0x1
 1023 0106 35010000 		.4byte	0x135
 1024 010a 09       		.uleb128 0x9
 1025 010b 27010000 		.4byte	.LASF18
 1026 010f 01       		.byte	0x1
 1027 0110 7B       		.byte	0x7b
 1028 0111 6C000000 		.4byte	0x6c
 1029 0115 02       		.byte	0x2
 1030 0116 91       		.byte	0x91
 1031 0117 74       		.sleb128 -12
 1032 0118 09       		.uleb128 0x9
 1033 0119 6F010000 		.4byte	.LASF19
 1034 011d 01       		.byte	0x1
 1035 011e 7B       		.byte	0x7b
 1036 011f 6C000000 		.4byte	0x6c
 1037 0123 02       		.byte	0x2
 1038 0124 91       		.byte	0x91
 1039 0125 70       		.sleb128 -16
 1040 0126 09       		.uleb128 0x9
 1041 0127 3B000000 		.4byte	.LASF20
 1042 012b 01       		.byte	0x1
 1043 012c 7B       		.byte	0x7b
 1044 012d 6C000000 		.4byte	0x6c
 1045 0131 02       		.byte	0x2
 1046 0132 91       		.byte	0x91
 1047 0133 6C       		.sleb128 -20
 1048 0134 00       		.byte	0
 1049 0135 0A       		.uleb128 0xa
 1050 0136 01       		.byte	0x1
 1051 0137 74000000 		.4byte	.LASF22
 1052 013b 01       		.byte	0x1
 1053 013c 85       		.byte	0x85
 1054 013d 6C000000 		.4byte	0x6c
 1055 0141 00000000 		.4byte	.LFB37
 1056 0145 34000000 		.4byte	.LFE37
 1057 0149 BC000000 		.4byte	.LLST4
 1058 014d 01       		.byte	0x1
 1059 014e 61010000 		.4byte	0x161
 1060 0152 0B       		.uleb128 0xb
 1061 0153 FA010000 		.4byte	.LASF23
 1062 0157 01       		.byte	0x1
 1063 0158 87       		.byte	0x87
 1064 0159 6C000000 		.4byte	0x6c
 1065 015d 02       		.byte	0x2
 1066 015e 91       		.byte	0x91
 1067 015f 74       		.sleb128 -12
 1068 0160 00       		.byte	0
 1069 0161 0C       		.uleb128 0xc
 1070 0162 01       		.byte	0x1
 1071 0163 83000000 		.4byte	.LASF41
 1072 0167 01       		.byte	0x1
 1073 0168 8F       		.byte	0x8f
 1074 0169 01       		.byte	0x1
ARM GAS  C:\Users\Kristian\AppData\Local\Temp\cc62PDWa.s 			page 25


 1075 016a 6C000000 		.4byte	0x6c
 1076 016e 00000000 		.4byte	.LFB38
 1077 0172 94000000 		.4byte	.LFE38
 1078 0176 F4000000 		.4byte	.LLST5
 1079 017a 01       		.byte	0x1
 1080 017b 9C010000 		.4byte	0x19c
 1081 017f 09       		.uleb128 0x9
 1082 0180 FA010000 		.4byte	.LASF23
 1083 0184 01       		.byte	0x1
 1084 0185 8F       		.byte	0x8f
 1085 0186 6C000000 		.4byte	0x6c
 1086 018a 02       		.byte	0x2
 1087 018b 91       		.byte	0x91
 1088 018c 6C       		.sleb128 -20
 1089 018d 0B       		.uleb128 0xb
 1090 018e E0010000 		.4byte	.LASF24
 1091 0192 01       		.byte	0x1
 1092 0193 91       		.byte	0x91
 1093 0194 7A000000 		.4byte	0x7a
 1094 0198 02       		.byte	0x2
 1095 0199 91       		.byte	0x91
 1096 019a 77       		.sleb128 -9
 1097 019b 00       		.byte	0
 1098 019c 07       		.uleb128 0x7
 1099 019d 01       		.byte	0x1
 1100 019e F1010000 		.4byte	.LASF26
 1101 01a2 01       		.byte	0x1
 1102 01a3 A4       		.byte	0xa4
 1103 01a4 00000000 		.4byte	.LFB39
 1104 01a8 10000000 		.4byte	.LFE39
 1105 01ac 2C010000 		.4byte	.LLST6
 1106 01b0 01       		.byte	0x1
 1107 01b1 07       		.uleb128 0x7
 1108 01b2 01       		.byte	0x1
 1109 01b3 0F020000 		.4byte	.LASF27
 1110 01b7 01       		.byte	0x1
 1111 01b8 AC       		.byte	0xac
 1112 01b9 00000000 		.4byte	.LFB40
 1113 01bd 86000000 		.4byte	.LFE40
 1114 01c1 58010000 		.4byte	.LLST7
 1115 01c5 01       		.byte	0x1
 1116 01c6 07       		.uleb128 0x7
 1117 01c7 01       		.byte	0x1
 1118 01c8 68000000 		.4byte	.LASF28
 1119 01cc 01       		.byte	0x1
 1120 01cd BE       		.byte	0xbe
 1121 01ce 00000000 		.4byte	.LFB41
 1122 01d2 6E000000 		.4byte	.LFE41
 1123 01d6 84010000 		.4byte	.LLST8
 1124 01da 01       		.byte	0x1
 1125 01db 0D       		.uleb128 0xd
 1126 01dc 01       		.byte	0x1
 1127 01dd 91000000 		.4byte	.LASF42
 1128 01e1 01       		.byte	0x1
 1129 01e2 CD       		.byte	0xcd
 1130 01e3 00000000 		.4byte	.LFB42
 1131 01e7 E4000000 		.4byte	.LFE42
ARM GAS  C:\Users\Kristian\AppData\Local\Temp\cc62PDWa.s 			page 26


 1132 01eb B0010000 		.4byte	.LLST9
 1133 01ef 01       		.byte	0x1
 1134 01f0 40020000 		.4byte	0x240
 1135 01f4 0E       		.uleb128 0xe
 1136 01f5 7800     		.ascii	"x\000"
 1137 01f7 01       		.byte	0x1
 1138 01f8 D0       		.byte	0xd0
 1139 01f9 85000000 		.4byte	0x85
 1140 01fd 02       		.byte	0x2
 1141 01fe 91       		.byte	0x91
 1142 01ff 76       		.sleb128 -10
 1143 0200 0E       		.uleb128 0xe
 1144 0201 7900     		.ascii	"y\000"
 1145 0203 01       		.byte	0x1
 1146 0204 D0       		.byte	0xd0
 1147 0205 85000000 		.4byte	0x85
 1148 0209 02       		.byte	0x2
 1149 020a 91       		.byte	0x91
 1150 020b 74       		.sleb128 -12
 1151 020c 0E       		.uleb128 0xe
 1152 020d 7A00     		.ascii	"z\000"
 1153 020f 01       		.byte	0x1
 1154 0210 D0       		.byte	0xd0
 1155 0211 85000000 		.4byte	0x85
 1156 0215 02       		.byte	0x2
 1157 0216 91       		.byte	0x91
 1158 0217 72       		.sleb128 -14
 1159 0218 0E       		.uleb128 0xe
 1160 0219 783100   		.ascii	"x1\000"
 1161 021c 01       		.byte	0x1
 1162 021d D1       		.byte	0xd1
 1163 021e 3B000000 		.4byte	0x3b
 1164 0222 02       		.byte	0x2
 1165 0223 91       		.byte	0x91
 1166 0224 71       		.sleb128 -15
 1167 0225 0E       		.uleb128 0xe
 1168 0226 793100   		.ascii	"y1\000"
 1169 0229 01       		.byte	0x1
 1170 022a D1       		.byte	0xd1
 1171 022b 3B000000 		.4byte	0x3b
 1172 022f 02       		.byte	0x2
 1173 0230 91       		.byte	0x91
 1174 0231 70       		.sleb128 -16
 1175 0232 0E       		.uleb128 0xe
 1176 0233 7A3100   		.ascii	"z1\000"
 1177 0236 01       		.byte	0x1
 1178 0237 D1       		.byte	0xd1
 1179 0238 3B000000 		.4byte	0x3b
 1180 023c 02       		.byte	0x2
 1181 023d 91       		.byte	0x91
 1182 023e 6F       		.sleb128 -17
 1183 023f 00       		.byte	0
 1184 0240 0F       		.uleb128 0xf
 1185 0241 01       		.byte	0x1
 1186 0242 1B020000 		.4byte	.LASF29
 1187 0246 01       		.byte	0x1
 1188 0247 F2       		.byte	0xf2
ARM GAS  C:\Users\Kristian\AppData\Local\Temp\cc62PDWa.s 			page 27


 1189 0248 01       		.byte	0x1
 1190 0249 00000000 		.4byte	.LFB43
 1191 024d BC000000 		.4byte	.LFE43
 1192 0251 E8010000 		.4byte	.LLST10
 1193 0255 01       		.byte	0x1
 1194 0256 9E020000 		.4byte	0x29e
 1195 025a 10       		.uleb128 0x10
 1196 025b 494400   		.ascii	"ID\000"
 1197 025e 01       		.byte	0x1
 1198 025f F2       		.byte	0xf2
 1199 0260 6C000000 		.4byte	0x6c
 1200 0264 02       		.byte	0x2
 1201 0265 91       		.byte	0x91
 1202 0266 6C       		.sleb128 -20
 1203 0267 09       		.uleb128 0x9
 1204 0268 28020000 		.4byte	.LASF30
 1205 026c 01       		.byte	0x1
 1206 026d F2       		.byte	0xf2
 1207 026e 6C000000 		.4byte	0x6c
 1208 0272 02       		.byte	0x2
 1209 0273 91       		.byte	0x91
 1210 0274 68       		.sleb128 -24
 1211 0275 09       		.uleb128 0x9
 1212 0276 00000000 		.4byte	.LASF31
 1213 027a 01       		.byte	0x1
 1214 027b F2       		.byte	0xf2
 1215 027c 6C000000 		.4byte	0x6c
 1216 0280 02       		.byte	0x2
 1217 0281 91       		.byte	0x91
 1218 0282 64       		.sleb128 -28
 1219 0283 09       		.uleb128 0x9
 1220 0284 35010000 		.4byte	.LASF32
 1221 0288 01       		.byte	0x1
 1222 0289 F2       		.byte	0xf2
 1223 028a 6C000000 		.4byte	0x6c
 1224 028e 02       		.byte	0x2
 1225 028f 91       		.byte	0x91
 1226 0290 60       		.sleb128 -32
 1227 0291 0E       		.uleb128 0xe
 1228 0292 6900     		.ascii	"i\000"
 1229 0294 01       		.byte	0x1
 1230 0295 F4       		.byte	0xf4
 1231 0296 6C000000 		.4byte	0x6c
 1232 029a 02       		.byte	0x2
 1233 029b 91       		.byte	0x91
 1234 029c 74       		.sleb128 -12
 1235 029d 00       		.byte	0
 1236 029e 11       		.uleb128 0x11
 1237 029f 01       		.byte	0x1
 1238 02a0 AC000000 		.4byte	.LASF33
 1239 02a4 01       		.byte	0x1
 1240 02a5 1901     		.2byte	0x119
 1241 02a7 00000000 		.4byte	.LFB44
 1242 02ab 0C000000 		.4byte	.LFE44
 1243 02af 20020000 		.4byte	.LLST11
 1244 02b3 01       		.byte	0x1
 1245 02b4 11       		.uleb128 0x11
ARM GAS  C:\Users\Kristian\AppData\Local\Temp\cc62PDWa.s 			page 28


 1246 02b5 01       		.byte	0x1
 1247 02b6 EF000000 		.4byte	.LASF34
 1248 02ba 01       		.byte	0x1
 1249 02bb 1F01     		.2byte	0x11f
 1250 02bd 00000000 		.4byte	.LFB45
 1251 02c1 0C000000 		.4byte	.LFE45
 1252 02c5 4C020000 		.4byte	.LLST12
 1253 02c9 01       		.byte	0x1
 1254 02ca 12       		.uleb128 0x12
 1255 02cb 88010000 		.4byte	.LASF35
 1256 02cf 01       		.byte	0x1
 1257 02d0 3D       		.byte	0x3d
 1258 02d1 30000000 		.4byte	0x30
 1259 02d5 01       		.byte	0x1
 1260 02d6 05       		.byte	0x5
 1261 02d7 03       		.byte	0x3
 1262 02d8 00000000 		.4byte	numOfRegToRead
 1263 02dc 13       		.uleb128 0x13
 1264 02dd 6C000000 		.4byte	0x6c
 1265 02e1 F2020000 		.4byte	0x2f2
 1266 02e5 14       		.uleb128 0x14
 1267 02e6 A5000000 		.4byte	0xa5
 1268 02ea 5F       		.byte	0x5f
 1269 02eb 14       		.uleb128 0x14
 1270 02ec A5000000 		.4byte	0xa5
 1271 02f0 02       		.byte	0x2
 1272 02f1 00       		.byte	0
 1273 02f2 12       		.uleb128 0x12
 1274 02f3 2F020000 		.4byte	.LASF36
 1275 02f7 01       		.byte	0x1
 1276 02f8 3F       		.byte	0x3f
 1277 02f9 DC020000 		.4byte	0x2dc
 1278 02fd 01       		.byte	0x1
 1279 02fe 05       		.byte	0x5
 1280 02ff 03       		.byte	0x3
 1281 0300 00000000 		.4byte	sensArray
 1282 0304 13       		.uleb128 0x13
 1283 0305 9E000000 		.4byte	0x9e
 1284 0309 14030000 		.4byte	0x314
 1285 030d 14       		.uleb128 0x14
 1286 030e A5000000 		.4byte	0xa5
 1287 0312 41       		.byte	0x41
 1288 0313 00       		.byte	0
 1289 0314 12       		.uleb128 0x12
 1290 0315 65010000 		.4byte	.LASF37
 1291 0319 01       		.byte	0x1
 1292 031a 41       		.byte	0x41
 1293 031b 04030000 		.4byte	0x304
 1294 031f 01       		.byte	0x1
 1295 0320 05       		.byte	0x5
 1296 0321 03       		.byte	0x3
 1297 0322 00000000 		.4byte	dataArray
 1298 0326 00       		.byte	0
 1299              		.section	.debug_abbrev,"",%progbits
 1300              	.Ldebug_abbrev0:
 1301 0000 01       		.uleb128 0x1
 1302 0001 11       		.uleb128 0x11
ARM GAS  C:\Users\Kristian\AppData\Local\Temp\cc62PDWa.s 			page 29


 1303 0002 01       		.byte	0x1
 1304 0003 25       		.uleb128 0x25
 1305 0004 0E       		.uleb128 0xe
 1306 0005 13       		.uleb128 0x13
 1307 0006 0B       		.uleb128 0xb
 1308 0007 03       		.uleb128 0x3
 1309 0008 0E       		.uleb128 0xe
 1310 0009 1B       		.uleb128 0x1b
 1311 000a 0E       		.uleb128 0xe
 1312 000b 55       		.uleb128 0x55
 1313 000c 06       		.uleb128 0x6
 1314 000d 11       		.uleb128 0x11
 1315 000e 01       		.uleb128 0x1
 1316 000f 52       		.uleb128 0x52
 1317 0010 01       		.uleb128 0x1
 1318 0011 10       		.uleb128 0x10
 1319 0012 06       		.uleb128 0x6
 1320 0013 00       		.byte	0
 1321 0014 00       		.byte	0
 1322 0015 02       		.uleb128 0x2
 1323 0016 24       		.uleb128 0x24
 1324 0017 00       		.byte	0
 1325 0018 0B       		.uleb128 0xb
 1326 0019 0B       		.uleb128 0xb
 1327 001a 3E       		.uleb128 0x3e
 1328 001b 0B       		.uleb128 0xb
 1329 001c 03       		.uleb128 0x3
 1330 001d 0E       		.uleb128 0xe
 1331 001e 00       		.byte	0
 1332 001f 00       		.byte	0
 1333 0020 03       		.uleb128 0x3
 1334 0021 16       		.uleb128 0x16
 1335 0022 00       		.byte	0
 1336 0023 03       		.uleb128 0x3
 1337 0024 0E       		.uleb128 0xe
 1338 0025 3A       		.uleb128 0x3a
 1339 0026 0B       		.uleb128 0xb
 1340 0027 3B       		.uleb128 0x3b
 1341 0028 0B       		.uleb128 0xb
 1342 0029 49       		.uleb128 0x49
 1343 002a 13       		.uleb128 0x13
 1344 002b 00       		.byte	0
 1345 002c 00       		.byte	0
 1346 002d 04       		.uleb128 0x4
 1347 002e 24       		.uleb128 0x24
 1348 002f 00       		.byte	0
 1349 0030 0B       		.uleb128 0xb
 1350 0031 0B       		.uleb128 0xb
 1351 0032 3E       		.uleb128 0x3e
 1352 0033 0B       		.uleb128 0xb
 1353 0034 03       		.uleb128 0x3
 1354 0035 08       		.uleb128 0x8
 1355 0036 00       		.byte	0
 1356 0037 00       		.byte	0
 1357 0038 05       		.uleb128 0x5
 1358 0039 2E       		.uleb128 0x2e
 1359 003a 00       		.byte	0
ARM GAS  C:\Users\Kristian\AppData\Local\Temp\cc62PDWa.s 			page 30


 1360 003b 3F       		.uleb128 0x3f
 1361 003c 0C       		.uleb128 0xc
 1362 003d 03       		.uleb128 0x3
 1363 003e 0E       		.uleb128 0xe
 1364 003f 3A       		.uleb128 0x3a
 1365 0040 0B       		.uleb128 0xb
 1366 0041 3B       		.uleb128 0x3b
 1367 0042 0B       		.uleb128 0xb
 1368 0043 27       		.uleb128 0x27
 1369 0044 0C       		.uleb128 0xc
 1370 0045 11       		.uleb128 0x11
 1371 0046 01       		.uleb128 0x1
 1372 0047 12       		.uleb128 0x12
 1373 0048 01       		.uleb128 0x1
 1374 0049 40       		.uleb128 0x40
 1375 004a 06       		.uleb128 0x6
 1376 004b 9742     		.uleb128 0x2117
 1377 004d 0C       		.uleb128 0xc
 1378 004e 00       		.byte	0
 1379 004f 00       		.byte	0
 1380 0050 06       		.uleb128 0x6
 1381 0051 2E       		.uleb128 0x2e
 1382 0052 00       		.byte	0
 1383 0053 3F       		.uleb128 0x3f
 1384 0054 0C       		.uleb128 0xc
 1385 0055 03       		.uleb128 0x3
 1386 0056 0E       		.uleb128 0xe
 1387 0057 3A       		.uleb128 0x3a
 1388 0058 0B       		.uleb128 0xb
 1389 0059 3B       		.uleb128 0x3b
 1390 005a 0B       		.uleb128 0xb
 1391 005b 49       		.uleb128 0x49
 1392 005c 13       		.uleb128 0x13
 1393 005d 11       		.uleb128 0x11
 1394 005e 01       		.uleb128 0x1
 1395 005f 12       		.uleb128 0x12
 1396 0060 01       		.uleb128 0x1
 1397 0061 40       		.uleb128 0x40
 1398 0062 06       		.uleb128 0x6
 1399 0063 9642     		.uleb128 0x2116
 1400 0065 0C       		.uleb128 0xc
 1401 0066 00       		.byte	0
 1402 0067 00       		.byte	0
 1403 0068 07       		.uleb128 0x7
 1404 0069 2E       		.uleb128 0x2e
 1405 006a 00       		.byte	0
 1406 006b 3F       		.uleb128 0x3f
 1407 006c 0C       		.uleb128 0xc
 1408 006d 03       		.uleb128 0x3
 1409 006e 0E       		.uleb128 0xe
 1410 006f 3A       		.uleb128 0x3a
 1411 0070 0B       		.uleb128 0xb
 1412 0071 3B       		.uleb128 0x3b
 1413 0072 0B       		.uleb128 0xb
 1414 0073 11       		.uleb128 0x11
 1415 0074 01       		.uleb128 0x1
 1416 0075 12       		.uleb128 0x12
ARM GAS  C:\Users\Kristian\AppData\Local\Temp\cc62PDWa.s 			page 31


 1417 0076 01       		.uleb128 0x1
 1418 0077 40       		.uleb128 0x40
 1419 0078 06       		.uleb128 0x6
 1420 0079 9642     		.uleb128 0x2116
 1421 007b 0C       		.uleb128 0xc
 1422 007c 00       		.byte	0
 1423 007d 00       		.byte	0
 1424 007e 08       		.uleb128 0x8
 1425 007f 2E       		.uleb128 0x2e
 1426 0080 01       		.byte	0x1
 1427 0081 3F       		.uleb128 0x3f
 1428 0082 0C       		.uleb128 0xc
 1429 0083 03       		.uleb128 0x3
 1430 0084 0E       		.uleb128 0xe
 1431 0085 3A       		.uleb128 0x3a
 1432 0086 0B       		.uleb128 0xb
 1433 0087 3B       		.uleb128 0x3b
 1434 0088 0B       		.uleb128 0xb
 1435 0089 27       		.uleb128 0x27
 1436 008a 0C       		.uleb128 0xc
 1437 008b 11       		.uleb128 0x11
 1438 008c 01       		.uleb128 0x1
 1439 008d 12       		.uleb128 0x12
 1440 008e 01       		.uleb128 0x1
 1441 008f 40       		.uleb128 0x40
 1442 0090 06       		.uleb128 0x6
 1443 0091 9742     		.uleb128 0x2117
 1444 0093 0C       		.uleb128 0xc
 1445 0094 01       		.uleb128 0x1
 1446 0095 13       		.uleb128 0x13
 1447 0096 00       		.byte	0
 1448 0097 00       		.byte	0
 1449 0098 09       		.uleb128 0x9
 1450 0099 05       		.uleb128 0x5
 1451 009a 00       		.byte	0
 1452 009b 03       		.uleb128 0x3
 1453 009c 0E       		.uleb128 0xe
 1454 009d 3A       		.uleb128 0x3a
 1455 009e 0B       		.uleb128 0xb
 1456 009f 3B       		.uleb128 0x3b
 1457 00a0 0B       		.uleb128 0xb
 1458 00a1 49       		.uleb128 0x49
 1459 00a2 13       		.uleb128 0x13
 1460 00a3 02       		.uleb128 0x2
 1461 00a4 0A       		.uleb128 0xa
 1462 00a5 00       		.byte	0
 1463 00a6 00       		.byte	0
 1464 00a7 0A       		.uleb128 0xa
 1465 00a8 2E       		.uleb128 0x2e
 1466 00a9 01       		.byte	0x1
 1467 00aa 3F       		.uleb128 0x3f
 1468 00ab 0C       		.uleb128 0xc
 1469 00ac 03       		.uleb128 0x3
 1470 00ad 0E       		.uleb128 0xe
 1471 00ae 3A       		.uleb128 0x3a
 1472 00af 0B       		.uleb128 0xb
 1473 00b0 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Kristian\AppData\Local\Temp\cc62PDWa.s 			page 32


 1474 00b1 0B       		.uleb128 0xb
 1475 00b2 49       		.uleb128 0x49
 1476 00b3 13       		.uleb128 0x13
 1477 00b4 11       		.uleb128 0x11
 1478 00b5 01       		.uleb128 0x1
 1479 00b6 12       		.uleb128 0x12
 1480 00b7 01       		.uleb128 0x1
 1481 00b8 40       		.uleb128 0x40
 1482 00b9 06       		.uleb128 0x6
 1483 00ba 9642     		.uleb128 0x2116
 1484 00bc 0C       		.uleb128 0xc
 1485 00bd 01       		.uleb128 0x1
 1486 00be 13       		.uleb128 0x13
 1487 00bf 00       		.byte	0
 1488 00c0 00       		.byte	0
 1489 00c1 0B       		.uleb128 0xb
 1490 00c2 34       		.uleb128 0x34
 1491 00c3 00       		.byte	0
 1492 00c4 03       		.uleb128 0x3
 1493 00c5 0E       		.uleb128 0xe
 1494 00c6 3A       		.uleb128 0x3a
 1495 00c7 0B       		.uleb128 0xb
 1496 00c8 3B       		.uleb128 0x3b
 1497 00c9 0B       		.uleb128 0xb
 1498 00ca 49       		.uleb128 0x49
 1499 00cb 13       		.uleb128 0x13
 1500 00cc 02       		.uleb128 0x2
 1501 00cd 0A       		.uleb128 0xa
 1502 00ce 00       		.byte	0
 1503 00cf 00       		.byte	0
 1504 00d0 0C       		.uleb128 0xc
 1505 00d1 2E       		.uleb128 0x2e
 1506 00d2 01       		.byte	0x1
 1507 00d3 3F       		.uleb128 0x3f
 1508 00d4 0C       		.uleb128 0xc
 1509 00d5 03       		.uleb128 0x3
 1510 00d6 0E       		.uleb128 0xe
 1511 00d7 3A       		.uleb128 0x3a
 1512 00d8 0B       		.uleb128 0xb
 1513 00d9 3B       		.uleb128 0x3b
 1514 00da 0B       		.uleb128 0xb
 1515 00db 27       		.uleb128 0x27
 1516 00dc 0C       		.uleb128 0xc
 1517 00dd 49       		.uleb128 0x49
 1518 00de 13       		.uleb128 0x13
 1519 00df 11       		.uleb128 0x11
 1520 00e0 01       		.uleb128 0x1
 1521 00e1 12       		.uleb128 0x12
 1522 00e2 01       		.uleb128 0x1
 1523 00e3 40       		.uleb128 0x40
 1524 00e4 06       		.uleb128 0x6
 1525 00e5 9642     		.uleb128 0x2116
 1526 00e7 0C       		.uleb128 0xc
 1527 00e8 01       		.uleb128 0x1
 1528 00e9 13       		.uleb128 0x13
 1529 00ea 00       		.byte	0
 1530 00eb 00       		.byte	0
ARM GAS  C:\Users\Kristian\AppData\Local\Temp\cc62PDWa.s 			page 33


 1531 00ec 0D       		.uleb128 0xd
 1532 00ed 2E       		.uleb128 0x2e
 1533 00ee 01       		.byte	0x1
 1534 00ef 3F       		.uleb128 0x3f
 1535 00f0 0C       		.uleb128 0xc
 1536 00f1 03       		.uleb128 0x3
 1537 00f2 0E       		.uleb128 0xe
 1538 00f3 3A       		.uleb128 0x3a
 1539 00f4 0B       		.uleb128 0xb
 1540 00f5 3B       		.uleb128 0x3b
 1541 00f6 0B       		.uleb128 0xb
 1542 00f7 11       		.uleb128 0x11
 1543 00f8 01       		.uleb128 0x1
 1544 00f9 12       		.uleb128 0x12
 1545 00fa 01       		.uleb128 0x1
 1546 00fb 40       		.uleb128 0x40
 1547 00fc 06       		.uleb128 0x6
 1548 00fd 9642     		.uleb128 0x2116
 1549 00ff 0C       		.uleb128 0xc
 1550 0100 01       		.uleb128 0x1
 1551 0101 13       		.uleb128 0x13
 1552 0102 00       		.byte	0
 1553 0103 00       		.byte	0
 1554 0104 0E       		.uleb128 0xe
 1555 0105 34       		.uleb128 0x34
 1556 0106 00       		.byte	0
 1557 0107 03       		.uleb128 0x3
 1558 0108 08       		.uleb128 0x8
 1559 0109 3A       		.uleb128 0x3a
 1560 010a 0B       		.uleb128 0xb
 1561 010b 3B       		.uleb128 0x3b
 1562 010c 0B       		.uleb128 0xb
 1563 010d 49       		.uleb128 0x49
 1564 010e 13       		.uleb128 0x13
 1565 010f 02       		.uleb128 0x2
 1566 0110 0A       		.uleb128 0xa
 1567 0111 00       		.byte	0
 1568 0112 00       		.byte	0
 1569 0113 0F       		.uleb128 0xf
 1570 0114 2E       		.uleb128 0x2e
 1571 0115 01       		.byte	0x1
 1572 0116 3F       		.uleb128 0x3f
 1573 0117 0C       		.uleb128 0xc
 1574 0118 03       		.uleb128 0x3
 1575 0119 0E       		.uleb128 0xe
 1576 011a 3A       		.uleb128 0x3a
 1577 011b 0B       		.uleb128 0xb
 1578 011c 3B       		.uleb128 0x3b
 1579 011d 0B       		.uleb128 0xb
 1580 011e 27       		.uleb128 0x27
 1581 011f 0C       		.uleb128 0xc
 1582 0120 11       		.uleb128 0x11
 1583 0121 01       		.uleb128 0x1
 1584 0122 12       		.uleb128 0x12
 1585 0123 01       		.uleb128 0x1
 1586 0124 40       		.uleb128 0x40
 1587 0125 06       		.uleb128 0x6
ARM GAS  C:\Users\Kristian\AppData\Local\Temp\cc62PDWa.s 			page 34


 1588 0126 9642     		.uleb128 0x2116
 1589 0128 0C       		.uleb128 0xc
 1590 0129 01       		.uleb128 0x1
 1591 012a 13       		.uleb128 0x13
 1592 012b 00       		.byte	0
 1593 012c 00       		.byte	0
 1594 012d 10       		.uleb128 0x10
 1595 012e 05       		.uleb128 0x5
 1596 012f 00       		.byte	0
 1597 0130 03       		.uleb128 0x3
 1598 0131 08       		.uleb128 0x8
 1599 0132 3A       		.uleb128 0x3a
 1600 0133 0B       		.uleb128 0xb
 1601 0134 3B       		.uleb128 0x3b
 1602 0135 0B       		.uleb128 0xb
 1603 0136 49       		.uleb128 0x49
 1604 0137 13       		.uleb128 0x13
 1605 0138 02       		.uleb128 0x2
 1606 0139 0A       		.uleb128 0xa
 1607 013a 00       		.byte	0
 1608 013b 00       		.byte	0
 1609 013c 11       		.uleb128 0x11
 1610 013d 2E       		.uleb128 0x2e
 1611 013e 00       		.byte	0
 1612 013f 3F       		.uleb128 0x3f
 1613 0140 0C       		.uleb128 0xc
 1614 0141 03       		.uleb128 0x3
 1615 0142 0E       		.uleb128 0xe
 1616 0143 3A       		.uleb128 0x3a
 1617 0144 0B       		.uleb128 0xb
 1618 0145 3B       		.uleb128 0x3b
 1619 0146 05       		.uleb128 0x5
 1620 0147 11       		.uleb128 0x11
 1621 0148 01       		.uleb128 0x1
 1622 0149 12       		.uleb128 0x12
 1623 014a 01       		.uleb128 0x1
 1624 014b 40       		.uleb128 0x40
 1625 014c 06       		.uleb128 0x6
 1626 014d 9642     		.uleb128 0x2116
 1627 014f 0C       		.uleb128 0xc
 1628 0150 00       		.byte	0
 1629 0151 00       		.byte	0
 1630 0152 12       		.uleb128 0x12
 1631 0153 34       		.uleb128 0x34
 1632 0154 00       		.byte	0
 1633 0155 03       		.uleb128 0x3
 1634 0156 0E       		.uleb128 0xe
 1635 0157 3A       		.uleb128 0x3a
 1636 0158 0B       		.uleb128 0xb
 1637 0159 3B       		.uleb128 0x3b
 1638 015a 0B       		.uleb128 0xb
 1639 015b 49       		.uleb128 0x49
 1640 015c 13       		.uleb128 0x13
 1641 015d 3F       		.uleb128 0x3f
 1642 015e 0C       		.uleb128 0xc
 1643 015f 02       		.uleb128 0x2
 1644 0160 0A       		.uleb128 0xa
ARM GAS  C:\Users\Kristian\AppData\Local\Temp\cc62PDWa.s 			page 35


 1645 0161 00       		.byte	0
 1646 0162 00       		.byte	0
 1647 0163 13       		.uleb128 0x13
 1648 0164 01       		.uleb128 0x1
 1649 0165 01       		.byte	0x1
 1650 0166 49       		.uleb128 0x49
 1651 0167 13       		.uleb128 0x13
 1652 0168 01       		.uleb128 0x1
 1653 0169 13       		.uleb128 0x13
 1654 016a 00       		.byte	0
 1655 016b 00       		.byte	0
 1656 016c 14       		.uleb128 0x14
 1657 016d 21       		.uleb128 0x21
 1658 016e 00       		.byte	0
 1659 016f 49       		.uleb128 0x49
 1660 0170 13       		.uleb128 0x13
 1661 0171 2F       		.uleb128 0x2f
 1662 0172 0B       		.uleb128 0xb
 1663 0173 00       		.byte	0
 1664 0174 00       		.byte	0
 1665 0175 00       		.byte	0
 1666              		.section	.debug_loc,"",%progbits
 1667              	.Ldebug_loc0:
 1668              	.LLST0:
 1669 0000 00000000 		.4byte	.LFB33
 1670 0004 02000000 		.4byte	.LCFI0
 1671 0008 0200     		.2byte	0x2
 1672 000a 7D       		.byte	0x7d
 1673 000b 00       		.sleb128 0
 1674 000c 02000000 		.4byte	.LCFI0
 1675 0010 04000000 		.4byte	.LCFI1
 1676 0014 0200     		.2byte	0x2
 1677 0016 7D       		.byte	0x7d
 1678 0017 08       		.sleb128 8
 1679 0018 04000000 		.4byte	.LCFI1
 1680 001c 08000000 		.4byte	.LFE33
 1681 0020 0200     		.2byte	0x2
 1682 0022 77       		.byte	0x77
 1683 0023 08       		.sleb128 8
 1684 0024 00000000 		.4byte	0
 1685 0028 00000000 		.4byte	0
 1686              	.LLST1:
 1687 002c 00000000 		.4byte	.LFB34
 1688 0030 02000000 		.4byte	.LCFI2
 1689 0034 0200     		.2byte	0x2
 1690 0036 7D       		.byte	0x7d
 1691 0037 00       		.sleb128 0
 1692 0038 02000000 		.4byte	.LCFI2
 1693 003c 04000000 		.4byte	.LCFI3
 1694 0040 0200     		.2byte	0x2
 1695 0042 7D       		.byte	0x7d
 1696 0043 08       		.sleb128 8
 1697 0044 04000000 		.4byte	.LCFI3
 1698 0048 1E000000 		.4byte	.LFE34
 1699 004c 0200     		.2byte	0x2
 1700 004e 77       		.byte	0x77
 1701 004f 08       		.sleb128 8
ARM GAS  C:\Users\Kristian\AppData\Local\Temp\cc62PDWa.s 			page 36


 1702 0050 00000000 		.4byte	0
 1703 0054 00000000 		.4byte	0
 1704              	.LLST2:
 1705 0058 00000000 		.4byte	.LFB35
 1706 005c 02000000 		.4byte	.LCFI4
 1707 0060 0200     		.2byte	0x2
 1708 0062 7D       		.byte	0x7d
 1709 0063 00       		.sleb128 0
 1710 0064 02000000 		.4byte	.LCFI4
 1711 0068 04000000 		.4byte	.LCFI5
 1712 006c 0200     		.2byte	0x2
 1713 006e 7D       		.byte	0x7d
 1714 006f 08       		.sleb128 8
 1715 0070 04000000 		.4byte	.LCFI5
 1716 0074 0C000000 		.4byte	.LFE35
 1717 0078 0200     		.2byte	0x2
 1718 007a 77       		.byte	0x77
 1719 007b 08       		.sleb128 8
 1720 007c 00000000 		.4byte	0
 1721 0080 00000000 		.4byte	0
 1722              	.LLST3:
 1723 0084 00000000 		.4byte	.LFB36
 1724 0088 02000000 		.4byte	.LCFI6
 1725 008c 0200     		.2byte	0x2
 1726 008e 7D       		.byte	0x7d
 1727 008f 00       		.sleb128 0
 1728 0090 02000000 		.4byte	.LCFI6
 1729 0094 04000000 		.4byte	.LCFI7
 1730 0098 0200     		.2byte	0x2
 1731 009a 7D       		.byte	0x7d
 1732 009b 08       		.sleb128 8
 1733 009c 04000000 		.4byte	.LCFI7
 1734 00a0 06000000 		.4byte	.LCFI8
 1735 00a4 0200     		.2byte	0x2
 1736 00a6 7D       		.byte	0x7d
 1737 00a7 18       		.sleb128 24
 1738 00a8 06000000 		.4byte	.LCFI8
 1739 00ac 6C000000 		.4byte	.LFE36
 1740 00b0 0200     		.2byte	0x2
 1741 00b2 77       		.byte	0x77
 1742 00b3 18       		.sleb128 24
 1743 00b4 00000000 		.4byte	0
 1744 00b8 00000000 		.4byte	0
 1745              	.LLST4:
 1746 00bc 00000000 		.4byte	.LFB37
 1747 00c0 02000000 		.4byte	.LCFI9
 1748 00c4 0200     		.2byte	0x2
 1749 00c6 7D       		.byte	0x7d
 1750 00c7 00       		.sleb128 0
 1751 00c8 02000000 		.4byte	.LCFI9
 1752 00cc 04000000 		.4byte	.LCFI10
 1753 00d0 0200     		.2byte	0x2
 1754 00d2 7D       		.byte	0x7d
 1755 00d3 08       		.sleb128 8
 1756 00d4 04000000 		.4byte	.LCFI10
 1757 00d8 06000000 		.4byte	.LCFI11
 1758 00dc 0200     		.2byte	0x2
ARM GAS  C:\Users\Kristian\AppData\Local\Temp\cc62PDWa.s 			page 37


 1759 00de 7D       		.byte	0x7d
 1760 00df 10       		.sleb128 16
 1761 00e0 06000000 		.4byte	.LCFI11
 1762 00e4 34000000 		.4byte	.LFE37
 1763 00e8 0200     		.2byte	0x2
 1764 00ea 77       		.byte	0x77
 1765 00eb 10       		.sleb128 16
 1766 00ec 00000000 		.4byte	0
 1767 00f0 00000000 		.4byte	0
 1768              	.LLST5:
 1769 00f4 00000000 		.4byte	.LFB38
 1770 00f8 02000000 		.4byte	.LCFI12
 1771 00fc 0200     		.2byte	0x2
 1772 00fe 7D       		.byte	0x7d
 1773 00ff 00       		.sleb128 0
 1774 0100 02000000 		.4byte	.LCFI12
 1775 0104 04000000 		.4byte	.LCFI13
 1776 0108 0200     		.2byte	0x2
 1777 010a 7D       		.byte	0x7d
 1778 010b 08       		.sleb128 8
 1779 010c 04000000 		.4byte	.LCFI13
 1780 0110 06000000 		.4byte	.LCFI14
 1781 0114 0200     		.2byte	0x2
 1782 0116 7D       		.byte	0x7d
 1783 0117 18       		.sleb128 24
 1784 0118 06000000 		.4byte	.LCFI14
 1785 011c 94000000 		.4byte	.LFE38
 1786 0120 0200     		.2byte	0x2
 1787 0122 77       		.byte	0x77
 1788 0123 18       		.sleb128 24
 1789 0124 00000000 		.4byte	0
 1790 0128 00000000 		.4byte	0
 1791              	.LLST6:
 1792 012c 00000000 		.4byte	.LFB39
 1793 0130 02000000 		.4byte	.LCFI15
 1794 0134 0200     		.2byte	0x2
 1795 0136 7D       		.byte	0x7d
 1796 0137 00       		.sleb128 0
 1797 0138 02000000 		.4byte	.LCFI15
 1798 013c 04000000 		.4byte	.LCFI16
 1799 0140 0200     		.2byte	0x2
 1800 0142 7D       		.byte	0x7d
 1801 0143 08       		.sleb128 8
 1802 0144 04000000 		.4byte	.LCFI16
 1803 0148 10000000 		.4byte	.LFE39
 1804 014c 0200     		.2byte	0x2
 1805 014e 77       		.byte	0x77
 1806 014f 08       		.sleb128 8
 1807 0150 00000000 		.4byte	0
 1808 0154 00000000 		.4byte	0
 1809              	.LLST7:
 1810 0158 00000000 		.4byte	.LFB40
 1811 015c 02000000 		.4byte	.LCFI17
 1812 0160 0200     		.2byte	0x2
 1813 0162 7D       		.byte	0x7d
 1814 0163 00       		.sleb128 0
 1815 0164 02000000 		.4byte	.LCFI17
ARM GAS  C:\Users\Kristian\AppData\Local\Temp\cc62PDWa.s 			page 38


 1816 0168 04000000 		.4byte	.LCFI18
 1817 016c 0200     		.2byte	0x2
 1818 016e 7D       		.byte	0x7d
 1819 016f 08       		.sleb128 8
 1820 0170 04000000 		.4byte	.LCFI18
 1821 0174 86000000 		.4byte	.LFE40
 1822 0178 0200     		.2byte	0x2
 1823 017a 77       		.byte	0x77
 1824 017b 08       		.sleb128 8
 1825 017c 00000000 		.4byte	0
 1826 0180 00000000 		.4byte	0
 1827              	.LLST8:
 1828 0184 00000000 		.4byte	.LFB41
 1829 0188 02000000 		.4byte	.LCFI19
 1830 018c 0200     		.2byte	0x2
 1831 018e 7D       		.byte	0x7d
 1832 018f 00       		.sleb128 0
 1833 0190 02000000 		.4byte	.LCFI19
 1834 0194 04000000 		.4byte	.LCFI20
 1835 0198 0200     		.2byte	0x2
 1836 019a 7D       		.byte	0x7d
 1837 019b 08       		.sleb128 8
 1838 019c 04000000 		.4byte	.LCFI20
 1839 01a0 6E000000 		.4byte	.LFE41
 1840 01a4 0200     		.2byte	0x2
 1841 01a6 77       		.byte	0x77
 1842 01a7 08       		.sleb128 8
 1843 01a8 00000000 		.4byte	0
 1844 01ac 00000000 		.4byte	0
 1845              	.LLST9:
 1846 01b0 00000000 		.4byte	.LFB42
 1847 01b4 02000000 		.4byte	.LCFI21
 1848 01b8 0200     		.2byte	0x2
 1849 01ba 7D       		.byte	0x7d
 1850 01bb 00       		.sleb128 0
 1851 01bc 02000000 		.4byte	.LCFI21
 1852 01c0 04000000 		.4byte	.LCFI22
 1853 01c4 0200     		.2byte	0x2
 1854 01c6 7D       		.byte	0x7d
 1855 01c7 08       		.sleb128 8
 1856 01c8 04000000 		.4byte	.LCFI22
 1857 01cc 06000000 		.4byte	.LCFI23
 1858 01d0 0200     		.2byte	0x2
 1859 01d2 7D       		.byte	0x7d
 1860 01d3 18       		.sleb128 24
 1861 01d4 06000000 		.4byte	.LCFI23
 1862 01d8 E4000000 		.4byte	.LFE42
 1863 01dc 0200     		.2byte	0x2
 1864 01de 77       		.byte	0x77
 1865 01df 18       		.sleb128 24
 1866 01e0 00000000 		.4byte	0
 1867 01e4 00000000 		.4byte	0
 1868              	.LLST10:
 1869 01e8 00000000 		.4byte	.LFB43
 1870 01ec 02000000 		.4byte	.LCFI24
 1871 01f0 0200     		.2byte	0x2
 1872 01f2 7D       		.byte	0x7d
ARM GAS  C:\Users\Kristian\AppData\Local\Temp\cc62PDWa.s 			page 39


 1873 01f3 00       		.sleb128 0
 1874 01f4 02000000 		.4byte	.LCFI24
 1875 01f8 04000000 		.4byte	.LCFI25
 1876 01fc 0200     		.2byte	0x2
 1877 01fe 7D       		.byte	0x7d
 1878 01ff 08       		.sleb128 8
 1879 0200 04000000 		.4byte	.LCFI25
 1880 0204 06000000 		.4byte	.LCFI26
 1881 0208 0200     		.2byte	0x2
 1882 020a 7D       		.byte	0x7d
 1883 020b 20       		.sleb128 32
 1884 020c 06000000 		.4byte	.LCFI26
 1885 0210 BC000000 		.4byte	.LFE43
 1886 0214 0200     		.2byte	0x2
 1887 0216 77       		.byte	0x77
 1888 0217 20       		.sleb128 32
 1889 0218 00000000 		.4byte	0
 1890 021c 00000000 		.4byte	0
 1891              	.LLST11:
 1892 0220 00000000 		.4byte	.LFB44
 1893 0224 02000000 		.4byte	.LCFI27
 1894 0228 0200     		.2byte	0x2
 1895 022a 7D       		.byte	0x7d
 1896 022b 00       		.sleb128 0
 1897 022c 02000000 		.4byte	.LCFI27
 1898 0230 04000000 		.4byte	.LCFI28
 1899 0234 0200     		.2byte	0x2
 1900 0236 7D       		.byte	0x7d
 1901 0237 08       		.sleb128 8
 1902 0238 04000000 		.4byte	.LCFI28
 1903 023c 0C000000 		.4byte	.LFE44
 1904 0240 0200     		.2byte	0x2
 1905 0242 77       		.byte	0x77
 1906 0243 08       		.sleb128 8
 1907 0244 00000000 		.4byte	0
 1908 0248 00000000 		.4byte	0
 1909              	.LLST12:
 1910 024c 00000000 		.4byte	.LFB45
 1911 0250 02000000 		.4byte	.LCFI29
 1912 0254 0200     		.2byte	0x2
 1913 0256 7D       		.byte	0x7d
 1914 0257 00       		.sleb128 0
 1915 0258 02000000 		.4byte	.LCFI29
 1916 025c 04000000 		.4byte	.LCFI30
 1917 0260 0200     		.2byte	0x2
 1918 0262 7D       		.byte	0x7d
 1919 0263 08       		.sleb128 8
 1920 0264 04000000 		.4byte	.LCFI30
 1921 0268 0C000000 		.4byte	.LFE45
 1922 026c 0200     		.2byte	0x2
 1923 026e 77       		.byte	0x77
 1924 026f 08       		.sleb128 8
 1925 0270 00000000 		.4byte	0
 1926 0274 00000000 		.4byte	0
 1927              		.section	.debug_aranges,"",%progbits
 1928 0000 7C000000 		.4byte	0x7c
 1929 0004 0200     		.2byte	0x2
ARM GAS  C:\Users\Kristian\AppData\Local\Temp\cc62PDWa.s 			page 40


 1930 0006 00000000 		.4byte	.Ldebug_info0
 1931 000a 04       		.byte	0x4
 1932 000b 00       		.byte	0
 1933 000c 0000     		.2byte	0
 1934 000e 0000     		.2byte	0
 1935 0010 00000000 		.4byte	.LFB33
 1936 0014 08000000 		.4byte	.LFE33-.LFB33
 1937 0018 00000000 		.4byte	.LFB34
 1938 001c 1E000000 		.4byte	.LFE34-.LFB34
 1939 0020 00000000 		.4byte	.LFB35
 1940 0024 0C000000 		.4byte	.LFE35-.LFB35
 1941 0028 00000000 		.4byte	.LFB36
 1942 002c 6C000000 		.4byte	.LFE36-.LFB36
 1943 0030 00000000 		.4byte	.LFB37
 1944 0034 34000000 		.4byte	.LFE37-.LFB37
 1945 0038 00000000 		.4byte	.LFB38
 1946 003c 94000000 		.4byte	.LFE38-.LFB38
 1947 0040 00000000 		.4byte	.LFB39
 1948 0044 10000000 		.4byte	.LFE39-.LFB39
 1949 0048 00000000 		.4byte	.LFB40
 1950 004c 86000000 		.4byte	.LFE40-.LFB40
 1951 0050 00000000 		.4byte	.LFB41
 1952 0054 6E000000 		.4byte	.LFE41-.LFB41
 1953 0058 00000000 		.4byte	.LFB42
 1954 005c E4000000 		.4byte	.LFE42-.LFB42
 1955 0060 00000000 		.4byte	.LFB43
 1956 0064 BC000000 		.4byte	.LFE43-.LFB43
 1957 0068 00000000 		.4byte	.LFB44
 1958 006c 0C000000 		.4byte	.LFE44-.LFB44
 1959 0070 00000000 		.4byte	.LFB45
 1960 0074 0C000000 		.4byte	.LFE45-.LFB45
 1961 0078 00000000 		.4byte	0
 1962 007c 00000000 		.4byte	0
 1963              		.section	.debug_ranges,"",%progbits
 1964              	.Ldebug_ranges0:
 1965 0000 00000000 		.4byte	.LFB33
 1966 0004 08000000 		.4byte	.LFE33
 1967 0008 00000000 		.4byte	.LFB34
 1968 000c 1E000000 		.4byte	.LFE34
 1969 0010 00000000 		.4byte	.LFB35
 1970 0014 0C000000 		.4byte	.LFE35
 1971 0018 00000000 		.4byte	.LFB36
 1972 001c 6C000000 		.4byte	.LFE36
 1973 0020 00000000 		.4byte	.LFB37
 1974 0024 34000000 		.4byte	.LFE37
 1975 0028 00000000 		.4byte	.LFB38
 1976 002c 94000000 		.4byte	.LFE38
 1977 0030 00000000 		.4byte	.LFB39
 1978 0034 10000000 		.4byte	.LFE39
 1979 0038 00000000 		.4byte	.LFB40
 1980 003c 86000000 		.4byte	.LFE40
 1981 0040 00000000 		.4byte	.LFB41
 1982 0044 6E000000 		.4byte	.LFE41
 1983 0048 00000000 		.4byte	.LFB42
 1984 004c E4000000 		.4byte	.LFE42
 1985 0050 00000000 		.4byte	.LFB43
 1986 0054 BC000000 		.4byte	.LFE43
ARM GAS  C:\Users\Kristian\AppData\Local\Temp\cc62PDWa.s 			page 41


 1987 0058 00000000 		.4byte	.LFB44
 1988 005c 0C000000 		.4byte	.LFE44
 1989 0060 00000000 		.4byte	.LFB45
 1990 0064 0C000000 		.4byte	.LFE45
 1991 0068 00000000 		.4byte	0
 1992 006c 00000000 		.4byte	0
 1993              		.section	.debug_line,"",%progbits
 1994              	.Ldebug_line0:
 1995 0000 47020000 		.section	.debug_str,"MS",%progbits,1
 1995      0200EB00 
 1995      00000201 
 1995      FB0E0D00 
 1995      01010101 
 1996              	.LASF31:
 1997 0000 795F6461 		.ascii	"y_data\000"
 1997      746100
 1998              	.LASF40:
 1999 0007 433A5C55 		.ascii	"C:\\Users\\Kristian\\Desktop\\Body_main\\Body_main."
 1999      73657273 
 1999      5C4B7269 
 1999      73746961 
 1999      6E5C4465 
 2000 0035 63796473 		.ascii	"cydsn\000"
 2000      6E00
 2001              	.LASF20:
 2002 003b 64617461 		.ascii	"dataTarget\000"
 2002      54617267 
 2002      657400
 2003              	.LASF16:
 2004 0046 4D595F49 		.ascii	"MY_ISR\000"
 2004      535200
 2005              	.LASF3:
 2006 004d 73686F72 		.ascii	"short unsigned int\000"
 2006      7420756E 
 2006      7369676E 
 2006      65642069 
 2006      6E7400
 2007              	.LASF9:
 2008 0060 75696E74 		.ascii	"uint8_t\000"
 2008      385F7400 
 2009              	.LASF28:
 2010 0068 696E6974 		.ascii	"initMPU6050\000"
 2010      4D505536 
 2010      30353000 
 2011              	.LASF22:
 2012 0074 72656164 		.ascii	"readAllSensors\000"
 2012      416C6C53 
 2012      656E736F 
 2012      727300
 2013              	.LASF41:
 2014 0083 72656164 		.ascii	"readI2C\000"
 2014      49324300 
 2015              	.LASF12:
 2016 008b 666C6F61 		.ascii	"float\000"
 2016      7400
 2017              	.LASF42:
 2018 0091 636F6E76 		.ascii	"convSensData\000"
ARM GAS  C:\Users\Kristian\AppData\Local\Temp\cc62PDWa.s 			page 42


 2018      53656E73 
 2018      44617461 
 2018      00
 2019              	.LASF1:
 2020 009e 756E7369 		.ascii	"unsigned char\000"
 2020      676E6564 
 2020      20636861 
 2020      7200
 2021              	.LASF33:
 2022 00ac 696E6974 		.ascii	"initUART\000"
 2022      55415254 
 2022      00
 2023              	.LASF11:
 2024 00b5 696E7431 		.ascii	"int16\000"
 2024      3600
 2025              	.LASF5:
 2026 00bb 6C6F6E67 		.ascii	"long unsigned int\000"
 2026      20756E73 
 2026      69676E65 
 2026      6420696E 
 2026      7400
 2027              	.LASF10:
 2028 00cd 75696E74 		.ascii	"uint8\000"
 2028      3800
 2029              	.LASF25:
 2030 00d3 696E6974 		.ascii	"initSensors\000"
 2030      53656E73 
 2030      6F727300 
 2031              	.LASF13:
 2032 00df 646F7562 		.ascii	"double\000"
 2032      6C6500
 2033              	.LASF39:
 2034 00e6 2E5C6D61 		.ascii	".\\main.c\000"
 2034      696E2E63 
 2034      00
 2035              	.LASF34:
 2036 00ef 68616E64 		.ascii	"handleI2CError\000"
 2036      6C654932 
 2036      43457272 
 2036      6F7200
 2037              	.LASF17:
 2038 00fe 6D61696E 		.ascii	"main\000"
 2038      00
 2039              	.LASF8:
 2040 0103 756E7369 		.ascii	"unsigned int\000"
 2040      676E6564 
 2040      20696E74 
 2040      00
 2041              	.LASF7:
 2042 0110 6C6F6E67 		.ascii	"long long unsigned int\000"
 2042      206C6F6E 
 2042      6720756E 
 2042      7369676E 
 2042      65642069 
 2043              	.LASF18:
 2044 0127 64657669 		.ascii	"deviceAddress\000"
 2044      63654164 
ARM GAS  C:\Users\Kristian\AppData\Local\Temp\cc62PDWa.s 			page 43


 2044      64726573 
 2044      7300
 2045              	.LASF32:
 2046 0135 7A5F6461 		.ascii	"z_data\000"
 2046      746100
 2047              	.LASF15:
 2048 013c 73697A65 		.ascii	"sizetype\000"
 2048      74797065 
 2048      00
 2049              	.LASF6:
 2050 0145 6C6F6E67 		.ascii	"long long int\000"
 2050      206C6F6E 
 2050      6720696E 
 2050      7400
 2051              	.LASF14:
 2052 0153 63686172 		.ascii	"char\000"
 2052      00
 2053              	.LASF21:
 2054 0158 73657453 		.ascii	"setSensArray\000"
 2054      656E7341 
 2054      72726179 
 2054      00
 2055              	.LASF37:
 2056 0165 64617461 		.ascii	"dataArray\000"
 2056      41727261 
 2056      7900
 2057              	.LASF19:
 2058 016f 72656769 		.ascii	"registerToRead\000"
 2058      73746572 
 2058      546F5265 
 2058      616400
 2059              	.LASF2:
 2060 017e 73686F72 		.ascii	"short int\000"
 2060      7420696E 
 2060      7400
 2061              	.LASF35:
 2062 0188 6E756D4F 		.ascii	"numOfRegToRead\000"
 2062      66526567 
 2062      546F5265 
 2062      616400
 2063              	.LASF38:
 2064 0197 474E5520 		.ascii	"GNU C 4.7.3 20130312 (release) [ARM/embedded-4_7-br"
 2064      4320342E 
 2064      372E3320 
 2064      32303133 
 2064      30333132 
 2065 01ca 616E6368 		.ascii	"anch revision 196615]\000"
 2065      20726576 
 2065      6973696F 
 2065      6E203139 
 2065      36363135 
 2066              	.LASF24:
 2067 01e0 72617744 		.ascii	"rawData\000"
 2067      61746100 
 2068              	.LASF4:
 2069 01e8 6C6F6E67 		.ascii	"long int\000"
 2069      20696E74 
ARM GAS  C:\Users\Kristian\AppData\Local\Temp\cc62PDWa.s 			page 44


 2069      00
 2070              	.LASF26:
 2071 01f1 73657475 		.ascii	"setupI2C\000"
 2071      70493243 
 2071      00
 2072              	.LASF23:
 2073 01fa 6E756D4F 		.ascii	"numOfReg\000"
 2073      66526567 
 2073      00
 2074              	.LASF0:
 2075 0203 7369676E 		.ascii	"signed char\000"
 2075      65642063 
 2075      68617200 
 2076              	.LASF27:
 2077 020f 696E6974 		.ascii	"initADXL345\000"
 2077      4144584C 
 2077      33343500 
 2078              	.LASF29:
 2079 021b 73657464 		.ascii	"setdataArray\000"
 2079      61746141 
 2079      72726179 
 2079      00
 2080              	.LASF30:
 2081 0228 785F6461 		.ascii	"x_data\000"
 2081      746100
 2082              	.LASF36:
 2083 022f 73656E73 		.ascii	"sensArray\000"
 2083      41727261 
 2083      7900
 2084              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.7.3 20130312 (release) [ARM/embedded-4_7-br
